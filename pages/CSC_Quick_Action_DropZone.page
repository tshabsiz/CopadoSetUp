<apex:page standardController="Case" extensions="CSC_Quick_Action_DropZone_Cont"  sidebar="false" showHeader="false" standardStylesheets="false">
    <html xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
        <style>
            .target {
                background-size: cover;
                border: solid 1px #aaa;
                min-height: 200px;
                width: 50%;
                margin-top: 1em;
                border-radius: 5px;
                cursor: pointer ;
                transition: 300ms all;
                position: fixed;
                top: 0px;
                left: 50px;
            }
            
            textarea {
                background-color: white;
            }
            
            .active {
                box-shadow: 0px 0px 10px 10px rgba(1,97,223,.4);
            }
            
        </style>
        <head>
            <apex:stylesheet value="{!URLFOR($Resource.SLDS, 'assets/styles/salesforce-lightning-design-system-vf.min.css')}" />
            <script src="../../soap/ajax/38.0/connection.js" type="text/javascript">
            </script>
            <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js">
            </script>
            <apex:includeScript value="/support/console/38.0/integration.js" />
        </head>
        <apex:form id="theform">
            <div class="target" id="preview"></div>
            <div class="slds">
                <div class="slds-form--inline slds-m-top--xxx-small">
                    <div class="slds-form-element slds-float--right">
                        <apex:outputText value=""/>
                        <button id="btn" class="slds-button slds-button--brand" type="button" onclick="attFile();" >
                            Attach File
                        </button> 
                    </div>
                    <div class="slds-form-element slds-float--right">
                        <!-- <label class="slds-form-element__label" for="text-input-id-1">File Name</label>-->
                        <div class="slds-form-element__control">
                            <input type="text" id="fname" class="slds-input" placeholder="Enter file name" onchange="updateStyle(this);" />
                        </div>
                    </div>
                </div>
            </div>
        </apex:form>       
        <script>
        
        var $caseId = '{!Case.Id}';
        var btn = document.getElementById('btn');
        var fname = document.getElementById('fname');
        sforce.connection.sessionId= '{!$Api.Session_ID}';
        
        if(btn.disabled){
            btn.disabled = false;
        }
        
        var file, reader;
        var base64File;
        var $data, $size, $type, $test, $width, $height;
        var dataURL, filename;
        
        (function ($) {
            
            var defaults;
            $.event.fix = (function (originalFix) {
                return function (event) {
                    event = originalFix.apply(this, arguments);
                    if (event.type.indexOf('copy') === 0 || event.type.indexOf('paste') === 0) {
                       
                        event.clipboardData = event.originalEvent.clipboardData;
                    }
                    return event;
                };
            })($.event.fix);
            defaults = {
                callback: $.noop,
                matchType: /image.*/
            };
            return $.fn.pasteImageReader = function (options) {
                if (typeof options === "function") {
                    options = {
                        callback: options
                    };
                }
                options = $.extend({}, defaults, options);
                return this.each(function () {
                    var $this, element;
                    element = this;
                    $this = $(this);
                    
                    return $this.bind('paste', function (event) {
                        
                        var clipboardData, found;
                        found = false;
                        clipboardData = event.clipboardData;
                        
                        return Array.prototype.forEach.call(clipboardData.types, function (type, i) {
                            
                            if (found) {
                                return;
                            }
                            if (type.match(options.matchType) || clipboardData.items[i].type.match(options.matchType)) {
                                
                                file = clipboardData.items[i].getAsFile();
                                
                                reader = new FileReader();
                                
                                reader.onload = function (evt) {
                                    return options.callback.call(element, {
                                        dataURL: evt.target.result,
                                        event: evt,
                                        file: file,
                                        name: file.name
                                    });
                                };
                                
                                reader.readAsDataURL(file);
                                return found = true;
                            }
                        });
                    });
                });
            };
            
        })(jQuery);
        
        $("html").pasteImageReader(function (results) {
            
            filename = results.filename, dataURL = results.dataURL;
            $data.text(dataURL);
            $size.val(results.file.size);
            $type.val(results.file.type);
            $test.attr('href', dataURL);
            var img = document.createElement('img');
            img.src = dataURL;
            var w = img.width;
            var h = img.height;
            $width.val(w);
            $height.val(h);
            return $(".active").css({
                backgroundImage: "url(" + dataURL + ")"
            }).data({'width': w, 'height': h});
        });
        
        
        $(function () {
            $data = $('.data');
            $size = $('.size');
            $type = $('.type');
            $test = $('#test');
            $width = $('#width');
            $height = $('#height');
            
            $('.target').on('click', function () {
                var $this = $(this);
                var bi = $this.css('background-image');
                if (bi != 'none') {
                    $data.text(bi.substr(4, bi.length - 6));
                }

                $('.active').removeClass('active');
                $this.addClass('active');
                
                //$this.toggleClass('zoomin');
                //$width.val($this.data('width'));
                //$height.val($this.data('height'));
                
            });
        });
        
        //----------------------------------------------------------------
        
        function updateStyle(veld){
                veld.style.borderColor = '#e6e6e6';
                veld.placeholder = '';                
        };
        
        function attFile() {
            
            btn.disabled = true;
            document.getElementById('{!$Component.theform}').style.cursor = 'wait';
            
            //validation
            if(dataURL == null || dataURL == 'undefine' || dataURL == ''){
                alert('Please press ctr+v after you have cliked on the drop zone. The system do not know what you want to save as an attachment');
                
                document.getElementById('{!$Component.theform}').style.cursor = 'default';
            
                if(btn.disabled){
                    btn.disabled = false;
                }
                
                return null;
            }
            
            if(fname == null || fname.value == '' || fname.value == null){
                fname.style.borderColor = 'red';
                document.getElementById('{!$Component.theform}').style.cursor = 'default';
            
                if(btn.disabled){
                    btn.disabled = false;
                }
                return null;
            }
            
            var base64File = dataURL;
            var consoleCaseId = $caseId;
            var userFileName =  fname.value;
            
            
            CSC_Quick_Action_DropZone_Cont.getClipBoardImage( base64File, consoleCaseId, userFileName, function(results, event) { 
                
                if (event.status){
                    
                    RefreshPrimaryTab();
                    
                    $("#preview").css('background-image', 'none');
                    $("#preview").css("box-shadow", "none");
                    $("#fname").val('');
                   
                    if(btn.disabled){
                        btn.disabled = false;
                    }
                    
                    document.getElementById('{!$Component.theform}').style.cursor = 'default';
                    
                }else if(event.type == 'exception'){
                    alert('There was an error uploading your image');
                    
                    $("#preview").css('background-image', 'none');
                    $("#preview").css("box-shadow", "none");
                    $("#fname").val('');
                    
                    if(btn.disabled){
                        btn.disabled = false;
                    }
                    
                    document.getElementById('{!$Component.theform}').style.cursor = 'default';
                    
                    fname.value = '';
                }
            });
            
        }
        
        function RefreshPrimaryTab(){
            if (sforce.console.isInConsole()){
                sforce.console.getFocusedPrimaryTabId(showTabId);
            }else{
                window.top.location.href = '/' + consoleCaseId;
            }
        };
        
        var showTabId = function showTabId(result){
            var tabId = result.id;
            sforce.console.refreshPrimaryTabById(tabId , true);
        };
        </script>
    </html>
</apex:page>