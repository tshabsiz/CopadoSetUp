<apex:page standardController="Event" tabStyle="Event" cache="true" showHeader="false" sidebar="false" applyBodyTag="false" applyHtmlTag="false" extensions="advpm.CardWallEventController">
<html>
<head>
	<title>Event</title>
	<meta name="viewport" content="width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no"/>
    <apex:includeScript value="{!URLFOR($Resource.advpm__jQueryZip, 'js/jquery-1.8.3.min.js')}" />
    <apex:includeScript value="{!URLFOR($Resource.advpm__MBView_Bootstrap, 'js/bootstrap.2.3.2.min.js')}" />
    <!-- <apex:includeScript value="{!URLFOR($Resource.jQuery_NiceScroll, 'jquery.nicescroll.min.js')}" /> -->
    <apex:includeScript value="{!URLFOR($Resource.advpm__StandardElements, 'js/Activity.min.js')}" />
    <apex:stylesheet value="{!URLFOR($Resource.advpm__MBView_Bootstrap, 'css/bootstrap.2.3.2.min.css')}" />
    <apex:stylesheet value="{!URLFOR($Resource.advpm__Cal_Shared, 'CalFormsCSS.css')}" />
    <style type="text/css">
    	.myfeed {z-index:-1000}
    	.chatterfeedshell{overflow-x: hidden;}
    	.eventOwner select {width:90px;}
    	body {overflow-x:hidden!important;}
        html {overflow:auto!important;}
    	.labelCol{width:14%!important;}
    	.dataCol{width:36%!important;}
        .hide{display:none!important;}
    </style>
    <!-- Code To Toggle Submit State Buttons -->
    <apex:includeScript value="{!URLFOR($Resource.advpm__StandardElements, 'js/utility-control-styles.js')}" />
    <apex:stylesheet value="{!URLFOR($Resource.advpm__StandardElements, 'css/utility-control-styles.css')}" />
</head>
<body>
	<div id="loading_cal_status" class="{!IF(JSINHTMLENCODE($currentPage.parameters.isdtp) == 'p1','','hide')}" style="text-align:center;"><img width="16" height="16" title="Processing..." alt="Processing..." src="/img/loading.gif" /><span class="loadingText" style="font-weight:bold;padding-left:10px;">Loading...</span></div>
	<apex:form id="theForm">
        <apex:outputPanel layout="none" rendered="{!JSINHTMLENCODE($CurrentPage.parameters.saveSuccess) != '1' && !isSFMobile}">
        <style type="text/css">
            body {max-height:460px!important;}
        </style>
        </apex:outputPanel>
    	<script type="text/javascript">
            var $j = jQuery.noConflict();
            $j(document).ready(function(){
				if ('{!Event.Id}' == '' || '{!Event.WhatId}' == '' || '{!Event.WhoId}' == '') {
	        		if ('{!Event.WhatId}' == '') {
		            	$j( "div.matterField input[name$='_lktp']" ).val( '{!$ObjectType.advpm__Matter__c}' );
		            	//$j( "div.matterField select[name$='_mlktp']" ).val( '{!$ObjectType.advpm__Matter__c}' ).change();
		            	$j( "div.matterField select[name$='_mlktp']" ).val( '{!$ObjectType.advpm__Matter__c}' );
		            	$j( "div.matterField select[name$='_lktp']" ).val( '{!$ObjectType.advpm__Matter__c}' );
	            	}
	            	if ('{!Event.WhoId}' == '') {
		            	$j( "div.contactField input[name$='_lktp']" ).val( '{!$ObjectType.Contact}' );
		            	//$j( "div.contactField select[name$='_mlktp']" ).val( '{!$ObjectType.Contact}' ).change();
		            	$j( "div.contactField select[name$='_mlktp']" ).val( '{!$ObjectType.Contact}' );
		            	$j( "div.contactField select[name$='_lktp']" ).val( '{!$ObjectType.Contact}' );
	            	}
            	}
            	if ( (typeof sforce != 'undefined') && (sforce != null) ) {$j('#loading_cal_status').toggleClass('hide', true);}
               	else if('{!Event.Id}'!='') {$j('.openevent').css('display', 'block');}
                $j('#save-button').click(function(e){
                    e.preventDefault();
                    
                    if ({!isSFMobile} == true) {
	                    doUpdateDateVal('{!$Component.theForm.f_StartDateTime}','{!$Component.theForm.StartDateTime_m}','{!$Component.theForm.StartDateTime_time_m}');
	                    doUpdateDateVal('{!$Component.theForm.f_EndDateTime}','{!$Component.theForm.EndDateTime_m}','{!$Component.theForm.EndDateTime_time_m}');
                    }
                    else {
                        toggleButtons('{!$Component.theForm}', true);
                        doUpdateDateVal('{!$Component.theForm.f_StartDateTime}','{!$Component.theForm.StartDateTime}','{!$Component.theForm.StartDateTime_time}');
	                    doUpdateDateVal('{!$Component.theForm.f_EndDateTime}','{!$Component.theForm.EndDateTime}','{!$Component.theForm.EndDateTime_time}');
                    }
                    
                    saveEventAction();
                });
                $j('#close-button').click(function(e){
                    e.preventDefault();
                    if ( (typeof sforce != 'undefined') && (sforce != null) ) 
                	{
                		if ('{!JSINHTMLENCODE($currentPage.parameters.src)}'=='EventEdit') {
                			//sforce.one.back();//sforce.one.navigateToSObject('{!Event.Id}', 'detail');
                			sforce.one.navigateToURL('#/sObject/{!Event.Id}/view', true);
                		}
                		else
                			sforce.one.navigateToURL("{!JSINHTMLENCODE($currentPage.parameters.gotoURL)}");
			        }
			        else
			        {
                    	parent.doClose('EVENT', false);
                    }
                });
                $j('#delete-button').click(function(e){
                    e.preventDefault();
                    var cf = confirm('Are you sure you want to delete?');
                    if (cf) 
                    {
                        toggleButtons('{!$Component.theForm}', true);
	                    deleteEventAction();
                    }
                });
                if ( (typeof sforce != 'undefined') && (sforce != null) ){
               		toggleEventReminderOptions('{!$Component.theForm.reminder_set_m}','{!$Component.theForm.reminder_lt_m}');
		        }
		        else{
                   	toggleEventReminderOptions('{!$Component.theForm.reminder_set}','{!$Component.theForm.reminder_lt}');
                }
                if( '{!JSINHTMLENCODE($CurrentPage.parameters.saveSuccess)}' == '1' )
                {
                	if ( (typeof sforce != 'undefined') && (sforce != null) ) 
                	{
			    		if ('{!JSINHTMLENCODE($currentPage.parameters.src)}'=='EventEdit' && '{!Event.Id}'!='') {
                			//sforce.one.navigateToSObject('{!Event.Id}', 'detail');
                			sforce.one.navigateToURL('#/sObject/{!Event.Id}/view', true);
                		}
                		else
                			sforce.one.navigateToURL("{!JSINHTMLENCODE($currentPage.parameters.gotoURL)}");
			    		//sforce.one.back(true);
			        }
			        else
			        {
	                    if( '{!JSINHTMLENCODE($CurrentPage.parameters.src)}' == 'Calendar' ) {
	                        parent.loadEvents();
	                        parent.loadTime();
	                    }
	                    else if( '{!JSINHTMLENCODE($CurrentPage.parameters.src)}' == 'Gantt' )
	                        parent.retrieveData();
	                    else
	                        if ( typeof parent.ReloadTasks == 'function' ) parent.ReloadTasks();
	                    parent.doClose('EVENT', false);
	            	}
                }
                if ({!errMsgs.size} > 0)
                {
                	if ( (typeof sforce != 'undefined') && (sforce != null) && {!isSFMobile} == true ) { }
                	else {
                		$j('#modal-error-list').removeClass('hide').addClass('in');
                		//$j('#modal-error-list').modal('show');
					}
                }
                /*$j('.chatterShowHideFeed > .showFeedLink > .innerLink').click(function(e){
                	setTimeout(function(){
					    $j("html").getNiceScroll().resize();
					}, 3000);
                });*/
                toggleButtons('{!$Component.theForm}', false);
                initScroll();
            });
            function initScroll() {
            	/*$j("html").niceScroll({
                    bouncescroll: true,
                    horizrailenabled: false
                });*/
            }
            function doUpdateDateVal(a, b, c)
            {
           		document.getElementById(a).value = document.getElementById(b).value + ' ' + document.getElementById(c).value;
            }
            function toggleEventReminderOptions(a, b) {
            	var c = document.getElementById(a),
			        d = document.getElementById(b);
			    if (c && d) {
			    	d.disabled = !c.checked;
			    }
            }
        </script>
        <apex:actionFunction name="saveEventAction" action="{!saveEvent}" rerender="theForm,otherContent" status="loadingStatus" rendered="{!!isSFMobile}" />
        <apex:actionFunction name="deleteEventAction" action="{!deleteEvent}" rerender="theForm,otherContent" status="loadingStatus" rendered="{!!isSFMobile}" />
        <apex:actionFunction name="saveEventAction" action="{!saveEvent}" rerender="theForm,otherContent" status="loadingStatus_m" rendered="{!isSFMobile}" />
        <apex:actionFunction name="deleteEventAction" action="{!deleteEvent}" rerender="theForm,otherContent" status="loadingStatus_m" rendered="{!isSFMobile}" />
        
        <apex:inputField value="{!Event.IsAllDayEvent}" rendered="false" />
        <apex:inputField value="{!Event.ActivityDate}" rendered="false" />
        <apex:inputField value="{!Event.ReminderDateTime}" rendered="false" />
        <div style="display:none;">
        	<apex:inputField id="f_StartDateTime" value="{!Event.StartDateTime}" rendered="true" />
			<apex:inputField id="f_EndDateTime" value="{!Event.EndDateTime}" rendered="true" />
		</div>
		
        <apex:outputPanel style="margin:10px;" styleClass="bPageBlock brandSecondaryBrd bDetailBlock secondaryPalette" layout="block" rendered="{!JSINHTMLENCODE($CurrentPage.parameters.saveSuccess) != '1' && !isSFMobile}">
        	<apex:outputPanel layout="block" styleClass="message errorM3" rendered="{!HasPageMessages}"><apex:messages /></apex:outputPanel>
			<div class="pbHeader">
        		<table border="0" cellpadding="0" cellspacing="0" width="100%">
        			<tbody>
        				<tr>
        					<td class="pbTitle"><h5 class="mainTitle">Event Detail</h5></td>
        					<td class="pbButton">
        						<a id="save-button" class="showOnEditButton edit-button font-fix btn-adv btn-adv-info btn-adv-small {!IF(CurrentUserAccountName != null && CurrentUserAccountName != '','hide','')}" > <span class="edit-button-text">Save</span></a>
			                    <a id="close-button" class="showOnEditButton edit-button font-fix btn-adv btn-adv-small"><span class="edit-button-text">Close</span></a>
			                    <a id="delete-button" class="showOnEditButton edit-button font-fix btn-adv btn-adv-small {!IF(Event.Id==null,'hide','')}" style="margin-left:3px;"><span class="edit-button-text">Delete</span></a>
			                    
                                <a href="javascript:void(0);" class="hideOnEditButton btnDisabled edit-button font-fix btn-adv btn-adv-info btn-adv-small {!IF(CurrentUserAccountName != null && CurrentUserAccountName != '','hide','')}" > <span class="edit-button-text">{!$Label.Button_Processing}</span></a>
                                <a href="javascript:void(0);" class="hideOnEditButton btnDisabled edit-button font-fix btn-adv btn-adv-small"><span class="edit-button-text">{!$Label.Button_Processing}</span></a>
                                <a href="javascript:void(0);" class="hideOnEditButton btnDisabled edit-button font-fix btn-adv btn-adv-small {!IF(Event.Id==null,'hide','')}" style="margin-left:3px;"><span class="edit-button-text">{!$Label.Button_Processing}</span></a>
                                
                                <apex:actionStatus id="loadingStatus"><apex:facet name="start"><img width="16" height="16" title="Processing..." alt="Processing..." src="/img/loading.gif" /></apex:facet></apex:actionStatus>
			                    <apex:commandLink target="_top" styleClass="openevent pull-right" action="{!gotoStdEvent}" value="Edit in Standard Interface" />
                    		</td>
                    	</tr>
                    </tbody>
				</table>
            </div>
			<div class="pbBody">
            	<div class="pbSubsection">
	            	<table class="detailList" border="0" cellpadding="0" cellspacing="0" width="100%">
	            		<tbody>
	            		<tr>
	            			<th class="labelCol vfLabelColTextWrap"><apex:outputLabel for="subject" value="Subject" /></th>
	            			<td class="dataCol" colspan="3"><apex:inputText id="subject" value="{!Event.Subject}" style="width:70%;vertical-align:top;" required="false" /></td>
	            		</tr>
	            		<tr>
	            			<th class="labelCol vfLabelColTextWrap"><apex:outputLabel for="rel_to" value="Related To" /></th>
	            			<td class="dataCol" colspan="3"><apex:inputField id="rel_to" value="{!Event.WhatId}" styleClass="matterField" required="false" /></td>
	            		</tr>
	            		<tr>
	            			<th class="labelCol vfLabelColTextWrap"><apex:outputLabel for="rel_name" value="Name" /></th>
	            			<td class="dataCol" colspan="3"><apex:inputField id="rel_name" value="{!Event.WhoId}" styleClass="contactField" required="false" /></td>
	            		</tr>
	            		<tr>
	            			<th class="labelCol vfLabelColTextWrap"><apex:outputLabel for="StartDateTime" value="Start" /></th>
	            			<td class="dataCol">
	            				<span class="dateInput dateOnlyInput startDate">
		                			<apex:inputField id="StartDateTime" 
		                							 value="{!startDate.ActivityDate}"
		                							 onchange="ActivityFunction.updateDates('{!$Component.theForm.StartDateTime}', ['{!$Component.theForm.EndDateTime}'], true);ActivityFunction.updateCalendar(['{!$Component.theForm.StartDateTime}','{!$Component.theForm.EndDateTime}']);ActivityFunction.saveStartTime('{!$Component.theForm.StartDateTime}','{!$Component.theForm.StartDateTime_time}');ActivityFunction.checkDuration('IsRecurrence','{!$Component.theForm.AllDayEvent}','{!$Component.theForm.StartDateTime}','{!$Component.theForm.StartDateTime_time}','{!$Component.theForm.EndDateTime}','{!$Component.theForm.EndDateTime_time}');"
		                							 style="width:80px;" />
		                			<span class="timeInput">
		                				<apex:inputText id="StartDateTime_time"
		                								value="{!startTime}"
		                								onchange="ActivityFunction.updateEndTime('{!$Component.theForm.StartDateTime}','{!$Component.theForm.StartDateTime_time}','{!$Component.theForm.EndDateTime}','{!$Component.theForm.EndDateTime_time}');ActivityFunction.checkDuration('IsRecurrence','{!$Component.theForm.AllDayEvent}','{!$Component.theForm.StartDateTime}','{!$Component.theForm.StartDateTime_time}','{!$Component.theForm.EndDateTime}','{!$Component.theForm.EndDateTime_time}');" 
		                								onfocus="ActivityFunction.saveStartTime('{!$Component.theForm.StartDateTime}','{!$Component.theForm.StartDateTime_time}');ActivityFunction.showTimePicker('{!$Component.theForm.StartDateTime_time}')"
		                								style="width:80px;" /> 
		                				<span class="dateFormat">
		                					[ <a href="#" onclick="var inputField = getElementByIdCS('{!$Component.theForm.StartDateTime_time}');if (inputField && !inputField.disabled && inputField.value != '{!JSENCODE(selectTimeLink)}') { inputField.value = '{!JSENCODE(selectTimeLink)}'; if (inputField.onchange) {inputField.onchange();}}return false;">{!selectTimeLink}</a> ]
		                				</span>
		                			</span>
		                		</span>
	            			</td>
	            			<th class="labelCol vfLabelColTextWrap"><apex:outputLabel for="assig_to" value="Assigned To" /></th>
	            			<td class="dataCol"><apex:inputField id="assig_to" value="{!Event.OwnerId}" required="false" styleClass="eventOwner" /></td>
	            		</tr>
	            		<tr>
	            			<th class="labelCol vfLabelColTextWrap"><apex:outputLabel for="EndDateTime" value="End" /></th>
	            			<td class="dataCol">
	            				<span class="dateInput dateOnlyInput endDate">
		                			<apex:inputField id="EndDateTime" 
		                								value="{!endDate.ActivityDate}" 
		                								onchange="ActivityFunction.checkDuration('IsRecurrence','{!$Component.theForm.AllDayEvent}','{!$Component.theForm.StartDateTime}','{!$Component.theForm.StartDateTime_time}','{!$Component.theForm.EndDateTime}','{!$Component.theForm.EndDateTime_time}');" 
		                								style="width:80px;" />
		                			<span class="timeInput">
		                				<apex:inputText id="EndDateTime_time" 
		                								value="{!endTime}"
		                								onchange="ActivityFunction.checkDuration('IsRecurrence','{!$Component.theForm.AllDayEvent}','{!$Component.theForm.StartDateTime}','{!$Component.theForm.StartDateTime_time}','{!$Component.theForm.EndDateTime}','{!$Component.theForm.EndDateTime_time}');" 
		                								onfocus="ActivityFunction.showTimePicker('{!$Component.theForm.EndDateTime_time}')" 
		                								style="width:80px;" />
		                				<span class="dateFormat">
		                					[ <a href="#" onclick="var inputField = getElementByIdCS('{!$Component.theForm.EndDateTime_time}');if (inputField && !inputField.disabled && inputField.value != '{!JSENCODE(selectTimeLink)}') { inputField.value = '{!JSENCODE(selectTimeLink)}'; if (inputField.onchange) {inputField.onchange();}}return false;">{!selectTimeLink}</a> ]
		                				</span>
		                			</span>
		                		</span>
	            			</td>
	            			<th class="labelCol vfLabelColTextWrap"><apex:outputLabel for="show_as" value="Show Time As" /></th>
	            			<td class="dataCol"><apex:inputField id="show_as" value="{!Event.ShowAs}" required="false" /></td>
	            		</tr>
	            		<tr>
	            			<th class="labelCol vfLabelColTextWrap"><apex:outputLabel for="AllDayEvent" value="All-Day Event" /></th>
	            			<td class="dataCol"><apex:inputField id="AllDayEvent" required="false" value="{!Event.IsAllDayEvent}" onclick="$j(this).blur();ActivityFunction.clearTimeElements('{!$Component.theForm.AllDayEvent}','IsRecurrence','evt13','{!$Component.theForm.StartDateTime}','{!$Component.theForm.StartDateTime_time}','{!$Component.theForm.EndDateTime}','{!$Component.theForm.EndDateTime_time}',true);ActivityFunction.adjustEventReminderOptions(false,'{!$Component.theForm.AllDayEvent}',false,'IsRecurrence','reminder_dt_time');ActivityFunction.checkDuration('IsRecurrence','{!$Component.theForm.AllDayEvent}','{!$Component.theForm.StartDateTime}','{!$Component.theForm.StartDateTime_time}','{!$Component.theForm.EndDateTime}','{!$Component.theForm.EndDateTime_time}');" /></td>
	            			<th class="labelCol vfLabelColTextWrap"><apex:outputLabel for="f_type" value="Type" /></th>
	            			<td class="dataCol"><apex:inputField id="f_type" value="{!Event.Type}" required="false" /></td>
	            		</tr>
	            		<tr>
	            			<th class="labelCol vfLabelColTextWrap"><apex:outputLabel for="chkLogTime" value="Log Time" /></th>
	            			<td class="dataCol"><apex:inputField value="{!Event.advpm__Log_Time__c}" required="false" id="chkLogTime" onclick="$j(this).blur();" /></td>
	            			<th class="labelCol vfLabelColTextWrap"><apex:outputLabel for="isprivate" value="Private" /></th>
	            			<td class="dataCol"><apex:inputField id="isprivate" value="{!Event.IsPrivate}" required="false" onclick="$j(this).blur();" /></td>
	            		</tr>
	            		<tr>
	            			<th class="labelCol vfLabelColTextWrap"><apex:outputLabel for="reminder_set" value="Reminder" /></th>
	            			<td class="dataCol" colspan="3">
	            				<apex:inputCheckbox id="reminder_set" value="{!Event.IsReminderSet}" title="Set reminder on/off" style="margin-top: 2px;" onclick="$j(this).blur();toggleEventReminderOptions('{!$Component.theForm.reminder_set}','{!$Component.theForm.reminder_lt}');" />
	            				<apex:selectList id="reminder_lt" value="{!remTime}" title="Reminder lead time before the event" multiselect="false" size="1" style="display:inline;width:100px;padding:0px 0px;margin-left:5px;">
	            					<apex:selectOption itemValue="0" itemLabel="0 minutes" />
									<apex:selectOption itemValue="5" itemLabel="5 minutes" />
									<apex:selectOption itemValue="10" itemLabel="10 minutes" />
									<apex:selectOption itemValue="15" itemLabel="15 minutes" />
									<apex:selectOption itemValue="30" itemLabel="30 minutes" />
									<apex:selectOption itemValue="60" itemLabel="1 hour" />
									<apex:selectOption itemValue="120" itemLabel="2 hours" />
									<apex:selectOption itemValue="180" itemLabel="3 hours" />
									<apex:selectOption itemValue="240" itemLabel="4 hours" />
									<apex:selectOption itemValue="300" itemLabel="5 hours" />
									<apex:selectOption itemValue="360" itemLabel="6 hours" />
									<apex:selectOption itemValue="420" itemLabel="7 hours" />
									<apex:selectOption itemValue="480" itemLabel="8 hours" />
									<apex:selectOption itemValue="540" itemLabel="9 hours" />
									<apex:selectOption itemValue="600" itemLabel="10 hours" />
									<apex:selectOption itemValue="660" itemLabel="11 hours" />
									<apex:selectOption itemValue="720" itemLabel="0.5 days" />
									<apex:selectOption itemValue="1080" itemLabel="18 hours" />
									<apex:selectOption itemValue="1440" itemLabel="1 day" />
									<apex:selectOption itemValue="2880" itemLabel="2 days" />
									<apex:selectOption itemValue="4320" itemLabel="3 days" />
									<apex:selectOption itemValue="5760" itemLabel="4 days" />
									<apex:selectOption itemValue="10080" itemLabel="1 week" />
									<apex:selectOption itemValue="20160" itemLabel="2 weeks" />
								</apex:selectList>
	            			</td>
	            		</tr>
	            		<tr>
	            			<th class="labelCol vfLabelColTextWrap"><apex:outputLabel for="fld_descr" value="Description" /></th>
	            			<td class="dataCol" colspan="3"><apex:inputField id="fld_descr" value="{!Event.Description}" style="width:70%;" required="false" /></td>
	            		</tr>
	            		<apex:repeat value="{!$ObjectType.Event.FieldSets.advpm__fieldSet_CardWall}" var="f">
	                        <apex:outputPanel layout="none" rendered="{!NOT(CONTAINS(f,'.'))}">
	                        <tr><th class="labelCol vfLabelColTextWrap"><label>{!f.label}</label></th><td class="dataCol" colspan="3"><apex:inputField value="{!Event[f]}" required="{!f.Required}" rendered="{!f.Type != 'textarea' && NOT(CONTAINS(f,'.'))}" /><apex:inputField value="{!Event[f]}" required="{!f.Required}" rendered="{!f.Type == 'textarea' && NOT(CONTAINS(f,'.'))}" style="width:70%;height:60px;" /></td></tr>
	                        </apex:outputPanel>
	                    </apex:repeat>
	             		</tbody>
	            	</table>
	            </div>
	        </div>
	        <script type="text/javascript">
	        	$j(document).ready(function(){
	        		if ({!Event.IsAllDayEvent})
	    			{
		    			SimpleTimePicker.pickTime('{!$Component.theForm.StartDateTime_time}');
		                SimpleTimePicker.timePicker.selectTimeItem(0);
		                SimpleTimePicker.timePicker.hide('{!$Component.theForm.StartDateTime_time}');
		                SimpleTimePicker.pickTime('{!$Component.theForm.EndDateTime_time}');
		                SimpleTimePicker.timePicker.selectTimeItem(0);
		                SimpleTimePicker.timePicker.hide('{!$Component.theForm.EndDateTime_time}');
	                }
	                //ActivityFunction.adjustEventReminderOptions(false, '{!$Component.theForm.AllDayEvent}', false, 'IsRecurrence', 'reminder_dt_time');
	            	ActivityFunction.saveStartTime('{!$Component.theForm.StartDateTime}','{!$Component.theForm.StartDateTime_time}');
	    			ActivityFunction.checkDuration('IsRecurrence', '{!$Component.theForm.AllDayEvent}', '{!$Component.theForm.StartDateTime}','{!$Component.theForm.StartDateTime_time}','{!$Component.theForm.EndDateTime}','{!$Component.theForm.EndDateTime_time}');
	    			ActivityFunction.clearTimeElements('{!$Component.theForm.AllDayEvent}','IsRecurrence','evt13','{!$Component.theForm.StartDateTime}','{!$Component.theForm.StartDateTime_time}','{!$Component.theForm.EndDateTime}','{!$Component.theForm.EndDateTime_time}',true);
	    		});
	        </script>
        </apex:outputPanel>
        <apex:outputPanel style="margin:10px;" styleClass="bPageBlock brandSecondaryBrd bDetailBlock secondaryPalette mobile" layout="block" rendered="{!JSINHTMLENCODE($CurrentPage.parameters.saveSuccess) != '1' && isSFMobile}">
        	<apex:outputPanel layout="block" styleClass="message errorM3" rendered="{!HasPageMessages || errMsgs.size > 0}"><apex:messages />
        		<apex:dataList value="{!errMsgs}" var="er" type="circle" styleClass="text-error">
					<apex:outputPanel layout="inline"><strong>{!er.errHeading}</strong>&nbsp;{!er.errMessage}</apex:outputPanel>
				</apex:dataList>
        	</apex:outputPanel>
        	<div class="pbHeader">
        		<table border="0" cellpadding="0" cellspacing="0" width="100%">
        			<tbody>
        				<tr>
        					<td class="pbTitle" nowrap="nowrap"><h5 class="mainTitle">Event Detail</h5></td>
        					<td class="pbButton">
        						<a id="save-button" class="edit-button font-fix btn-adv btn-adv-info btn-adv-small"> <span class="edit-button-text">Save</span></a>
			                    <a id="close-button" class="edit-button font-fix btn-adv btn-adv-small"><span class="edit-button-text">Close</span></a>
			                    <a id="delete-button" class="edit-button font-fix btn-adv btn-adv-small {!IF(Event.Id==null,'hide','')}" style="margin-left:3px;"><span class="edit-button-text">Delete</span></a>
			                    <apex:actionStatus id="loadingStatus_m"><apex:facet name="start"><img width="16" height="16" title="Processing..." alt="Processing..." src="/img/loading.gif" /></apex:facet></apex:actionStatus>
			                    <apex:commandLink target="_top" styleClass="openevent pull-right" action="{!gotoStdEvent}" value="Edit in Standard Interface" />
                    		</td>
                    	</tr>
                    </tbody>
				</table>
            </div>
			<div class="pbBody">
            	<div class="pbSubsection">
	            	<table class="detailList" border="0" cellpadding="0" cellspacing="0" width="100%">
	            		<tbody>
	            		<tr>
	            			<td class="labelCol vfLabelColTextWrap"><apex:outputLabel for="subject_m" value="Subject" />
	            			<apex:inputText value="{!Event.Subject}" style="width:70%;vertical-align:top;" required="false" id="subject_m" /></td>
	            		</tr>
	            		<tr>
	            			<td class="labelCol vfLabelColTextWrap"><apex:outputLabel for="rel_to_m" value="Related To" />
	            			<apex:inputField value="{!Event.WhatId}" styleClass="matterField" required="false" id="rel_to_m" /></td>
	            		</tr>
	            		<tr>
	            			<td class="labelCol vfLabelColTextWrap"><apex:outputLabel for="rel_name_m" value="Name" />
	            			<apex:inputField value="{!Event.WhoId}" styleClass="contactField" required="false" id="rel_name_m" /></td>
	            		</tr>
	            		<tr>
	            			<td class="labelCol vfLabelColTextWrap"><apex:outputLabel for="assig_to_m" value="Assigned To" />
	            			<apex:inputField value="{!Event.OwnerId}" required="false" id="assig_to_m" /></td>
	            		</tr>
	            		<tr>
	            			<td class="labelCol vfLabelColTextWrap"><apex:outputLabel for="StartDateTime_m" value="Start" />
	            				<span class="dateInput dateOnlyInput startDate">
		                			<apex:inputField id="StartDateTime_m" 
		                							 value="{!startDate.ActivityDate}"
		                							 onchange="ActivityFunction.updateDates('{!$Component.theForm.StartDateTime_m}', ['{!$Component.theForm.EndDateTime_m}'], true);ActivityFunction.updateCalendar(['{!$Component.theForm.StartDateTime_m}','{!$Component.theForm.EndDateTime_m}']);ActivityFunction.saveStartTime('{!$Component.theForm.StartDateTime_m}','{!$Component.theForm.StartDateTime_time_m}');ActivityFunction.checkDuration('IsRecurrence','{!$Component.theForm.AllDayEvent_m}','{!$Component.theForm.StartDateTime_m}','{!$Component.theForm.StartDateTime_time_m}','{!$Component.theForm.EndDateTime_m}','{!$Component.theForm.EndDateTime_time_m}');"
		                							 style="width:80px;" />
		                			<span class="timeInput">
		                				<apex:inputText id="StartDateTime_time_m"
		                								value="{!startTime}"
		                								onchange="ActivityFunction.updateEndTime('{!$Component.theForm.StartDateTime_m}','{!$Component.theForm.StartDateTime_time_m}','{!$Component.theForm.EndDateTime_m}','{!$Component.theForm.EndDateTime_time_m}');ActivityFunction.checkDuration('IsRecurrence','{!$Component.theForm.AllDayEvent_m}','{!$Component.theForm.StartDateTime_m}','{!$Component.theForm.StartDateTime_time_m}','{!$Component.theForm.EndDateTime_m}','{!$Component.theForm.EndDateTime_time_m}');" 
		                								onfocus="ActivityFunction.saveStartTime('{!$Component.theForm.StartDateTime_m}','{!$Component.theForm.StartDateTime_time_m}');ActivityFunction.showTimePicker('{!$Component.theForm.StartDateTime_time_m}')"
		                								style="width:80px;" /> 
		                				<span class="dateFormat">
		                					[ <a href="#" onclick="var inputField = getElementByIdCS('{!$Component.theForm.StartDateTime_time_m}');if (inputField && !inputField.disabled && inputField.value != '{!JSENCODE(selectTimeLink)}') { inputField.value = '{!JSENCODE(selectTimeLink)}'; if (inputField.onchange) {inputField.onchange();}}return false;">{!selectTimeLink}</a> ]
		                				</span>
		                			</span>
		                		</span>
	            			</td>
	            		</tr>
	            		<tr>
	            			<td class="labelCol vfLabelColTextWrap"><apex:outputLabel for="EndDateTime_m" value="End" />
	            				<span class="dateInput dateOnlyInput endDate">
		                			<apex:inputField id="EndDateTime_m" 
		                								value="{!endDate.ActivityDate}" 
		                								onchange="ActivityFunction.checkDuration('IsRecurrence','{!$Component.theForm.AllDayEvent_m}','{!$Component.theForm.StartDateTime_m}','{!$Component.theForm.StartDateTime_time_m}','{!$Component.theForm.EndDateTime_m}','{!$Component.theForm.EndDateTime_time_m}');" 
		                								style="width:80px;" />
		                			<span class="timeInput">
		                				<apex:inputText id="EndDateTime_time_m" 
		                								value="{!endTime}"
		                								onchange="ActivityFunction.checkDuration('IsRecurrence','{!$Component.theForm.AllDayEvent_m}','{!$Component.theForm.StartDateTime_m}','{!$Component.theForm.StartDateTime_time_m}','{!$Component.theForm.EndDateTime_m}','{!$Component.theForm.EndDateTime_time_m}');" 
		                								onfocus="ActivityFunction.showTimePicker('{!$Component.theForm.EndDateTime_time_m}')" 
		                								style="width:80px;" />
		                				<span class="dateFormat">
		                					[ <a href="#" onclick="var inputField = getElementByIdCS('{!$Component.theForm.EndDateTime_time_m}');if (inputField && !inputField.disabled && inputField.value != '{!JSENCODE(selectTimeLink)}') { inputField.value = '{!JSENCODE(selectTimeLink)}'; if (inputField.onchange) {inputField.onchange();}}return false;">{!selectTimeLink}</a> ]
		                				</span>
		                			</span>
		                		</span>
	            			</td>
	            		</tr>
	            		<tr>
	            			<td class="labelCol vfLabelColTextWrap"><apex:outputLabel for="AllDayEvent_m" value="All-Day Event" />
	            			<apex:inputField id="AllDayEvent_m" required="false" value="{!Event.IsAllDayEvent}" onclick="ActivityFunction.clearTimeElements('{!$Component.theForm.AllDayEvent_m}','IsRecurrence','evt13','{!$Component.theForm.StartDateTime_m}','{!$Component.theForm.StartDateTime_time_m}','{!$Component.theForm.EndDateTime_m}','{!$Component.theForm.EndDateTime_time_m}',true);ActivityFunction.adjustEventReminderOptions(false,'{!$Component.theForm.AllDayEvent_m}',false,'IsRecurrence','reminder_dt_time');ActivityFunction.checkDuration('IsRecurrence','{!$Component.theForm.AllDayEvent_m}','{!$Component.theForm.StartDateTime_m}','{!$Component.theForm.StartDateTime_time_m}','{!$Component.theForm.EndDateTime_m}','{!$Component.theForm.EndDateTime_time_m}');" /></td>
	            		</tr>
	            		<tr>
	            			<td class="labelCol vfLabelColTextWrap"><apex:outputLabel for="show_as_m" value="Show Time As" />
	            			<apex:inputField value="{!Event.ShowAs}" required="false" id="show_as_m" /></td>
	            		</tr>
	            		<tr>
	            			<td class="labelCol vfLabelColTextWrap"><apex:outputLabel for="f_type_m" value="Type" />
	            			<apex:inputField value="{!Event.Type}" required="false" id="f_type_m" /></td>
	            		</tr>
	            		<tr>
	            			<td class="labelCol vfLabelColTextWrap"><apex:outputLabel for="isprivate_m" value="Private" />
	            			<apex:inputField id="isprivate_m" value="{!Event.IsPrivate}" required="false" /></td>
	            		</tr>
	            		<tr>
	            			<td class="labelCol vfLabelColTextWrap"><apex:outputLabel for="chkLogTime_m" value="Log Time" />
	            			<apex:inputField value="{!Event.advpm__Log_Time__c}" required="false" id="chkLogTime_m" /></td>
	            		</tr>
	            		<tr>
	            			<td class="labelCol vfLabelColTextWrap"><apex:outputLabel for="reminder_set_m" value="Reminder" />
	            				<apex:inputCheckbox id="reminder_set_m" value="{!Event.IsReminderSet}" title="Set reminder on/off" style="margin-top: 2px;" onclick="toggleEventReminderOptions('{!$Component.theForm.reminder_set_m}','{!$Component.theForm.reminder_lt_m}');" />
	            				<apex:selectList id="reminder_lt_m" value="{!remTime}" title="Reminder lead time before the event" multiselect="false" size="1" style="display:inline;width:100px;padding:0px 0px;margin-left:5px;">
	            					<apex:selectOption itemValue="0" itemLabel="0 minutes" />
									<apex:selectOption itemValue="5" itemLabel="5 minutes" />
									<apex:selectOption itemValue="10" itemLabel="10 minutes" />
									<apex:selectOption itemValue="15" itemLabel="15 minutes" />
									<apex:selectOption itemValue="30" itemLabel="30 minutes" />
									<apex:selectOption itemValue="60" itemLabel="1 hour" />
									<apex:selectOption itemValue="120" itemLabel="2 hours" />
									<apex:selectOption itemValue="180" itemLabel="3 hours" />
									<apex:selectOption itemValue="240" itemLabel="4 hours" />
									<apex:selectOption itemValue="300" itemLabel="5 hours" />
									<apex:selectOption itemValue="360" itemLabel="6 hours" />
									<apex:selectOption itemValue="420" itemLabel="7 hours" />
									<apex:selectOption itemValue="480" itemLabel="8 hours" />
									<apex:selectOption itemValue="540" itemLabel="9 hours" />
									<apex:selectOption itemValue="600" itemLabel="10 hours" />
									<apex:selectOption itemValue="660" itemLabel="11 hours" />
									<apex:selectOption itemValue="720" itemLabel="0.5 days" />
									<apex:selectOption itemValue="1080" itemLabel="18 hours" />
									<apex:selectOption itemValue="1440" itemLabel="1 day" />
									<apex:selectOption itemValue="2880" itemLabel="2 days" />
									<apex:selectOption itemValue="4320" itemLabel="3 days" />
									<apex:selectOption itemValue="5760" itemLabel="4 days" />
									<apex:selectOption itemValue="10080" itemLabel="1 week" />
									<apex:selectOption itemValue="20160" itemLabel="2 weeks" />
								</apex:selectList>
	            			</td>
	            		</tr>
	            		<tr>
	            			<td class="labelCol vfLabelColTextWrap"><apex:outputLabel for="fld_descr_m" value="Description" />
	            			<apex:inputField id="fld_descr_m" value="{!Event.Description}" style="width:70%;" required="false" /></td>
	            		</tr>
	            		<apex:repeat value="{!$ObjectType.Event.FieldSets.advpm__fieldSet_CardWall}" var="f">
	                        <apex:outputPanel layout="none" rendered="{!NOT(CONTAINS(f,'.'))}">
	                        <tr><td class="labelCol vfLabelColTextWrap"><label>{!f.label}</label><apex:inputField value="{!Event[f]}" required="{!f.Required}" rendered="{!f.Type != 'textarea' && NOT(CONTAINS(f,'.'))}" /><apex:inputField value="{!Event[f]}" required="{!f.Required}" rendered="{!f.Type == 'textarea' && NOT(CONTAINS(f,'.'))}" style="width:70%;height:60px;" /></td></tr>
	                        </apex:outputPanel>
	                    </apex:repeat>
	             		</tbody>
	            	</table>
	            </div>
	        </div>
	        <script type="text/javascript">
	        	$j(document).ready(function(){
	        		if ({!Event.IsAllDayEvent})
	    			{
		    			SimpleTimePicker.pickTime('{!$Component.theForm.StartDateTime_time_m}');
		                SimpleTimePicker.timePicker.selectTimeItem(0);
		                SimpleTimePicker.timePicker.hide('{!$Component.theForm.StartDateTime_time_m}');
		                SimpleTimePicker.pickTime('{!$Component.theForm.EndDateTime_time_m}');
		                SimpleTimePicker.timePicker.selectTimeItem(0);
		                SimpleTimePicker.timePicker.hide('{!$Component.theForm.EndDateTime_time_m}');
	                }
	                //ActivityFunction.adjustEventReminderOptions(false, '{!$Component.theForm.AllDayEvent_m}', false, 'IsRecurrence', 'reminder_dt_time');
	            	ActivityFunction.saveStartTime('{!$Component.theForm.StartDateTime_m}','{!$Component.theForm.StartDateTime_time_m}');
	    			ActivityFunction.checkDuration('IsRecurrence', '{!$Component.theForm.AllDayEvent_m}', '{!$Component.theForm.StartDateTime_m}','{!$Component.theForm.StartDateTime_time_m}','{!$Component.theForm.EndDateTime_m}','{!$Component.theForm.EndDateTime_time_m}');
	    			ActivityFunction.clearTimeElements('{!$Component.theForm.AllDayEvent_m}','IsRecurrence','evt13','{!$Component.theForm.StartDateTime_m}','{!$Component.theForm.StartDateTime_time_m}','{!$Component.theForm.EndDateTime_m}','{!$Component.theForm.EndDateTime_time_m}',true);
	    		});
	        </script>
        </apex:outputPanel>
    </apex:form>
    <apex:outputPanel id="otherContent">
	    <div class="myfeed">
	    	<chatter:feedWithFollowers entityId="{!Event.Id}" rendered="{!JSINHTMLENCODE($CurrentPage.parameters.saveSuccess) != '1'}" /><!--  rendered="{!!EditMode}" -->
	    </div>
	    <div class="modal hide fade" id="modal-error-list" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
			<div class="modal-header text-error">
	    		<h3 id="myModalLabel">Error</h3>
	  		</div>
	  		<div class="modal-body">
				<apex:dataList value="{!errMsgs}" var="er" type="circle" styleClass="text-error">
					<apex:outputPanel layout="inline"><strong>{!er.errHeading}</strong>&nbsp;{!er.errMessage}</apex:outputPanel>
				</apex:dataList>
	  		</div>
	  		<div class="modal-footer">
	    		<a href="#" onclick="$j('#modal-error-list').addClass('hide').removeClass('in');return false;" data-dismiss="modal" aria-hidden="true" class="btn-adv btn-adv-danger">Ok</a>
	  		</div>
		</div>
	</apex:outputPanel>
</body>
</html>
</apex:page>