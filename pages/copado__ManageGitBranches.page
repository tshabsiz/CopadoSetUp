<apex:page id="thePage" controller="copado.ManageGitBranchesController" tabStyle="copado__Git_Repository__c" extensions="copado.Settings" lightningStylesheets="true" showHeader="{!$User.UIThemeDisplayed=='Theme3'}" standardStylesheets="true" sidebar="{!$User.UIThemeDisplayed=='Theme3'}" applyHtmlTag="{!$User.UIThemeDisplayed=='Theme3'}" applyBodyTag="false" docType="html-5.0">
    <apex:slds />
    <html xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
        <head>
            <title>{!$Label.MANAGE_GIT_BRANCHES} | Copado</title>
            <c:GAnalytics />
            <c:WizardUtils />

            <script> var $copado = jQuery.noConflict(); </script>
            <script type="text/javascript">
                var __sfdcSessionId = '{!GETSESSIONID()}';
            </script>
            <script src="../../soap/ajax/32.0/connection.js" type="text/javascript"></script>

            <apex:includeScript value="{!URLFOR($Resource.copado__Statics, 'js/libs/jquery.min.1.10.2.js')}" />
            <apex:includeScript value="{!URLFOR($Resource.copado__jqx,'jqwidgets/jqx-all.js')}"/>

            <apex:includeScript value="{!URLFOR($Resource.metadataGrid2) }"/>
            <apex:includeScript value="{!URLFOR($Resource.copado__JsRemoting)}"/>
            <apex:includeScript value="{!URLFOR($Resource.utils) }"/>

            <apex:stylesheet value="{!IF($User.UIThemeDisplayed == 'Theme4d', URLFOR($Resource.copado__CopadoLightningCSS),'')}" />
            <apex:stylesheet value="{!URLFOR($Resource.copado__jqx,'jqwidgets/styles/jqx.base.css')}"/>
            <apex:stylesheet value="{!URLFOR($Resource.copado__jqx,'jqwidgets/styles/jqx.energyblue.css')}"/>



        </head>

        <body>
            <div class="copado-lightning-VF">
                <apex:pageMessages id="pmessage" rendered="{!$User.UIThemeDisplayed != 'Theme4d'}"/>

                <apex:outputPanel layout="block" styleClass="slds-scope copado-lightning-container" rendered="{!$User.UIThemeDisplayed == 'Theme4d'}">
                    <div class="slds-page-header">
                        <apex:outputPanel layout="block" id="pageMessages">
                            <apex:pagemessages id="msg"/>
                        </apex:outputPanel>
                        <div class="slds-grid">
                            <div class="slds-col slds-has-flexi-truncate">
                                <div class="slds-media">
                                    <div class="slds-media__figure">
                                          <span class="slds-icon_container slds-icon-custom-custom26" title="">
                                            <svg class="slds-icon" aria-hidden="true">
                                              <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Resource.SLDS,'/assets/icons/custom-sprite/svg/symbols.svg#custom26')}"></use>
                                            </svg>
                                          </span>
                                    </div>
                                    <div class="slds-media__body">
                                        <p class="slds-text-heading--label slds-line-height--reset">{!$Label.MANAGE_GIT_BRANCHES}</p>
                                        <h1 class="slds-page-header__title slds-truncate slds-align-middle" title="{!$Label.MANAGE_GIT_BRANCHES}">
                                            <!-- <apex:outputField value="{!$Label.MANAGE_GIT_BRANCHES}"/> -->
                                        </h1>
                                    </div>
                                </div>
                            </div>
                            <!-- ACTION BUTTONS -->
                            <div class="slds-col slds-no-flex slds-grid slds-align-top ">
                                <div class="slds-button-group" role="group">

                                </div>
                            </div>
                            <!-- / ACTION BUTTONS -->
                        </div>
                    </div>
                </apex:outputPanel>

                <apex:form id="theForm" rendered="{!!showError}" styleClass="copado-lightning-container" style="padding-top:12px;">
                    <c:ScreenLocker msg="{!$Label.copado__loading}" useJobsManager="true" possibleRunningJobs=",DxListRepositoryBranches,,true;,GitDeleteBranches,,true;"/>
                    <script>
                        window.addEventListener('copadoJobsManagerFinished', function (evt) {
                            for(var i=0 ; i < evt.detail.length ; i++ ) {
                                var jobFinished = evt.detail[i].isFinished;
                                var jobSuccess = evt.detail[i].isSuccess;
                                var jobMessage = evt.detail[i].message;
                                var jobType = evt.detail[i].type;
                                console.debug("Job Success: ", jobSuccess);
                                console.debug("Job Finished: ", jobFinished);
                                console.debug("Job Message: ", jobMessage);
                                console.debug("Job Type: ", jobType);
                                console.log('copadoJobsManagerFinished');
                                if(jobFinished && jobSuccess && jobType == 'DxListRepositoryBranches') {
                                    //reload Page so branches are loaded
                                    location.reload();
                                }else if(jobFinished && jobSuccess && jobType == 'GitDeleteBranches'){
                                    lockScreen();
                                    refreshBranches();
                                }else if(jobFinished && !jobSuccess && jobMessage)  {
                                    alert(jobMessage);
                                }
                            }
                        }, false);
                    </script>

                    <apex:pageBlock id="pb_deleteBranches">

                        <apex:pageblockButtons >
                            <apex:commandButton value="{!$Label.copado__delete_selected_branches}" onclick="openConfirmModal(); return false;" id="btnDelete" />
                            <apex:commandButton value="{!$Label.site.cancel}"  action="{!Cancel}" id="btnCancel"/>
                        </apex:pageblockButtons>

                        <apex:actionFunction name="deleteSelectedBranches" action="{!deleteGitBranches}" rerender="pmessage, msg">
                            <apex:param value="deleteGitBranches" name="deleteGitBranches"/>
                        </apex:actionFunction>
                        <apex:actionFunction name="refreshBranches" action="{!refreshBranchCache}" rerender="pmessage, msg"></apex:actionFunction>

                        <apex:actionStatus id="screenlocker" onstart="lockScreen();" onstop="unlockScreen();" />

                        <apex:actionFunction name="getRepoBranches" reRender="branchGridContainer" onComplete="unlockScreen();">
                            <apex:param value="" name="repoName" assignTo="{!repoName}"/>
                            <apex:param value="" name="repoId" assignTo="{!repoId}"/>
                        </apex:actionFunction>
                        <apex:actionFunction name="rerenderbranchGridContainer" reRender="branchGridContainer" onComplete="unlockScreen();"/>
                        <apex:pageBlockSection >
                            <apex:outputField value="{!gitRepo.Name}"/>
                            <apex:outputField value="{!gitRepo.copado__URI__c}"/>
                        </apex:pageBlockSection>


                        <apex:pageBlockSection title="{!$Label.copado__select_branches}" collapsible="false" columns="1" showHeader="true">
                            <apex:outputPanel layout="block" id="branchGridContainer">
                                <apex:outputPanel id="branchGrid" layout="block">
                                    <apex:outputPanel layout="none">
                                        <script type="application/javascript">
                                            var repoId = '{!JSENCODE(repoId)}';

                                            var _config = {
                                                repoId: repoId,
                                                url: '{!JSENCODE(urlBase)}dx/gitBranches/' + repoId + '{!JSENCODE(urlParameters)}',
                                                attachmentName: 'GitBranches',
                                                gridMode: 'userStoryWizard'
                                            };
                                            $copado(function () {
                                                window.setTimeout(initBraches(_config), 0);
                                                unlockScreen();
                                            });
                                        </script>
                                        <div>
                                            <div id="removeCacheContainer">
                                                <apex:commandLink style="display:none;" action="{!refreshBranchCache}" onComplete="unlockScreen();"
                                                                  value="{!$Label.copado__cache_refreshed_now}"
                                                                  onclick="lockScreen();"
                                                                  rerender="opDummy" id="removeCache"/>
                                            </div>
                                            <div class="branchesGrid" style="display: none;">
                                                <label style="display: none;" class="mg2_mtFilter">Metadata Type
                                                    Filter</label>&nbsp;
                                                <div class="mg2_scaleFilter" style="display: none;"/>
                                            </div>

                                            <div id="branchSelectorGrid">
                                                <center><img src="/img/loading.gif"/><i><span
                                                                id="retry-label">{!$Label.copado__loading}</span></i></center>
                                            </div>
                                        </div>
                                    </apex:outputPanel>
                                </apex:outputPanel>
                            </apex:outputPanel>
                        </apex:pageBlockSection>
                    </apex:pageBlock>

                    <div class="slds-scope">
                        <div class="slds-modal" aria-hidden="false" role="dialog" id="modal">
                            <div class="slds-modal__container">
                                <header class="slds-modal__header">
                                    <button class="slds-button slds-button_icon slds-modal__close slds-button_icon-inverse" title="{!$Label.CLOSE}" onclick="closeModal(); return false;">
                                        <svg class="slds-button__icon slds-button__icon_large" aria-hidden="true">
                                            <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Resource.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>
                                        </svg>
                                        <span class="slds-assistive-text">{!$Label.CLOSE}</span>
                                    </button>
                                    <h2 id="modal-heading-01" class="slds-text-heading_medium slds-hyphenate">{!$Label.DELETE_CONFIRM}</h2>
                                </header>
                                <div class="slds-modal__content slds-p-around_medium" id="modal-content-id-1">
                                    <div class="slds-form slds-form_horizontal">
                                        <div class="slds-form-element">
                                            <label class="slds-form-element__label" for="input-id-01">To confirm, type the word <strong>DELETE</strong></label>
                                            <div class="slds-form-element__control">
                                                <input type="text" id="deleteText" class="slds-input" value="" autocomplete="off"/>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <footer class="slds-modal__footer">
                                    <button type="button" class="slds-button slds-button_neutral" onclick="closeModal(); return false;">{!$Label.CANCEL}</button>
                                    <button type="button" id="deleteInModal" class="slds-button slds-button_destructive" onclick="lockScreen(); closeModal(); deleteSelectedBranches(JSON.stringify(getSelectedBranches())); return false;" disabled="true">{!$Label.DELETE}</button>
                                </footer>
                            </div>
                        </div>
                        <div class="slds-backdrop" id="backdrop"></div>
                    </div>
                </apex:form>

                <script>
                    // OpenModal
                    function openConfirmModal(){
                      $copado('#deleteText').val('');

                        $copado('#deleteText').keyup(function() {
                            if($copado(this).val() == 'DELETE'){
                                $copado('#deleteInModal').prop('disabled', false);
                            }else{
                                $copado('#deleteInModal').prop('disabled', 'disabled');
                            }
                        });

                      var sBranches = getSelectedBranches();
                      if(sBranches.gitBranches && sBranches.gitBranches.length < 1){
                          alert('Please Select at least one branch');
                          return false;
                      }
                      $copado('#backdrop').addClass('slds-backdrop--open');
                      $copado('#modal').addClass('slds-fade-in-open');
                    }

                    //Modal Close
                    function closeModal(){
                      $copado('#modal').removeClass('slds-fade-in-open');
                      $copado('#backdrop').removeClass('slds-backdrop--open');
                    }

                    $copado(document).ready(function(){
                      // Buttons To middle No PBtitle
                      if( (typeof sforce != 'undefined') && sforce && (!!sforce.one) ) {
                          var mTitle = $copado('.pbTitle')[0];
                          if(mTitle){
                            mTitle.remove();
                            var tdrow = $copado($copado('.pbButton')[0]);
                            if(tdrow){
                                tdrow.css( "text-align", "center" );
                            }
                          }
                      }
                    });
                </script>

                <script>
                    var cacheDate;
                    var initBraches = function (conf) {
                        listOfBranches = [];
                        selectedBranches = [];
                        conf.attachmentName = conf.attachmentName || 'GitBranches';
                        console.assert(conf.repoId && conf.repoId != '000000000000000', "copadoDX.initBraches: Repository Id is mandatory");

                        if(conf.repoId && conf.repoId != '000000000000000') {
                            listOfBranches = loadBranches(conf.repoId, conf.attachmentName, true);
                        } else {
                            unlockScreen();
                        }
                        // prepare the data
                        var source = {
                            localdata: listOfBranches,
                            datafields: [
                                {name: 's', type: 'bool'},
                                {name: 'name', type: 'string'},
                                {name: 'type', type: 'string'},
                                {name: 'lastUpdate', type: 'string'}
                            ],
                            datatype: 'array'
                        };

                        var dataAdapter = new $copado.jqx.dataAdapter(source);

                        var branchGrid = $copado("#branchSelectorGrid").jqxGrid({
                            width: '100%',
                            height: '100%',
                            source: dataAdapter,
                            pageable: true,
                            autoheight: false,
                            filterable: true,
                            sortable: true,
                            editable: true,
                            selectionmode: 'none',
                            pagesizeoptions: ['10', '50', '100', '500', '1000', '5000'],
                            pagesize: 200,
                            theme: 'base',
                            showfilterrow: true,
                            columns: [
                                {
                                    text: copadoLabels.selected,
                                    columntype: 'checkbox',
                                    filtertype: 'bool',
                                    datafield: 's',
                                    width: 60
                                },
                                {
                                    text: copadoLabels.name,
                                    filtertype: 'textbox',
                                    filtercondition: 'contains',
                                    editable: false,
                                    datafield: 'name',
                                    width: '40%'
                                },
                                {
                                    text: copadoLabels.type,
                                    datafield: 'type',
                                    filtertype: 'checkedlist',
                                    editable: false,
                                    columntype: 'textbox',
                                    width: '30%'
                                },
                                {
                                    text: copadoLabels.LastModifiedDate,
                                    filtertype: 'textbox',
                                    editable: false,
                                    datafield: 'lastUpdate',
                                    width: '30%'
                                }
                            ]
                        });
                        if(conf.repoId && conf.repoId != '000000000000000') {
                            createCacheDeleteButton(conf.repoId);
                        }
                    };
                    //returns selectedBranches
                    var getSelectedBranches = function(){
                        var jsonD = {
                            gitBranches : []
                        };
                        var a = $copado("#branchSelectorGrid").jqxGrid('getrows');
                        for (i =0; i<a.length; i++){
                            if(a[i].s){
                                jsonD.gitBranches.push(a[i].name);
                            }
                        }
                        return jsonD;
                    }

                    var loadBranches = function (repositoryId, attachmentName, isSelectable) {
                        console.assert(repositoryId, "loadBranches: had no repository");
                        var q = "Select Id, Body, LastModifiedDate, Name, ParentId From Attachment where Name='" + attachmentName + "' and parentId = '" + repositoryId + "' order by LastModifiedDate DESC limit 1";
                        var result = sforce.connection.query(q);
                        var records = result.getArray("records");
                        if(records && records.length > 0){
                            try {
                                var res = Base64.decode(records[0].Body);
                                cacheDate = records[0].LastModifiedDate;
                                var branchData = $copado.parseJSON(res);
                                for(var i = 0; i < branchData.length; i++){
                                    var dateEpoch = new Date(0);
                                    var temp = branchData[i];
                                    dateEpoch.setMilliseconds(branchData[i].lastUpdate);
                                    temp.lastUpdate = dateEpoch.getFullYear() + '-' + ('0'+ dateEpoch.getMonth()).slice(-2) + '-' + ('0'+dateEpoch.getDate()).slice(-2);

                                    if(isSelectable) {
                                        temp.s = false;
                                        listOfBranches[i] = temp;
                                    }
                                }
                                return branchData;
                            } catch (e) {
                                console.error('Exception on load branches', e);
                            }
                        }
                    };

                    var createCacheDeleteButton = function(repoId){
                        var $btn = $copado('[id$=removeCache]');

                        var text = $copado('[id$=removeCache]').html() || '';

                        if (!cacheDate && !repoId) {
                            $copado('[id*=removeCacheContainer]').hide();
                        } else if(cacheDate){
                            cacheDate = Date.fromISOString(cacheDate).toLocaleString();
                            $copado('[id*=removeCacheContainer]').show();
                            text = text.replace('__DATE__', cacheDate);
                            $btn.html( text );
                        } else if(repoId){
                            $copado('[id*=removeCacheContainer]').show();
                            text = text.replace('__DATE__', 'n/a');
                            $btn.html( text );
                        }
                        if (this.filterByType) {
                            text = text.replace('__METATYPE__', 'for ' + this.filterByType||'');
                            $btn.html( text );
                        } else {
                            text = text.replace('__METATYPE__', '');
                            $btn.html( text );
                        }

                        $btn.show();
                    };
                </script>

                <script>
                    ga('send', 'pageview', {
                      'page': '/ManageGitBranches',
                      'title': 'Manage Git Branches'
                    });
                </script>
                <c:CheckFeaturesComponent />

            </div>
        </body>
    </html>
</apex:page>