<apex:page controller="ClientPlanStrategyController" sidebar="false" standardStylesheets="false" docType="html-5.0">

    <apex:includeScript value="{!URLFOR($Resource.ckeditor_basic, 'ckeditor/ckeditor.js')}"/>
    
    <script>
        var planId = '{!$CurrentPage.parameters.planId}';
        var editedStrategyId;
        var editedUnqOptyId;
        var isClientStrategy;
        var hasError = 'has-error';
        var opportunityId;
    
        $('document').ready(function() {
            selectLabel(6);
            onSaved();
            addEvents();
            //CKEDITOR.config.browserContextMenuOnCtrl = false;
            CKEDITOR.config.removePlugins = 'tableresize,tabletools,contextmenu';
        });

        $(window).load(function () {
            //createSearchPanel();
        });

        function createSearchPanel(){
            ClientPlanStrategyController.getStrategiesList('', planId, function(result) {
                for(var i=0; i<result.length; i++){
                   addStrategyToSearchPanel(result[i]);
                } 
            });
        }

        function refreshListPanel(){
            $('#strategiesListPanel').empty();
            ClientPlanStrategyController.getStrategiesList('', planId, function(result) {
                for(var i=0; i<result.length; i++){
                    var strategy = result[i];
                    var opportunities = result[i].Opportunities__r;
                    var potentialOpportunities = result[i].Unqualified_Opportunities__r;
                    addStrategyToListPanel(strategy.Id, strategy.Name, strategy.Client_Strategy__c, strategy.Bank_Strategy__c);
                    if(opportunities){
                        for(var j=0; j<opportunities.length; j++){
                            var opportunity = opportunities[j];
                            addOpportunityToListPanel(strategy.Id, opportunity.Id, opportunity.Name, opportunity.Probability);
                        }
                    }
                    if(potentialOpportunities){
                        for(var k=0; k<potentialOpportunities.length; k++){
                            var potentialOpportunity = potentialOpportunities[k];
                            addPotentialOpportunityToListPanel(strategy.Id, potentialOpportunity.Id, potentialOpportunity.Name, potentialOpportunity.Probability__c);
                        }
                    }
                } 
                onSaved();
                endLoading();
            });
        }
        
        function onSaved() {
            prepareClientStrategy();
            prepareBankStrategy();
            setStrategyMaxWidth();
            setPageMinHeight();
            prepareModalDatePicker();
            //endLoading();
        }
        
        function addEvents() {
            $('#showOptyButton').click( function() {
                window.open('/' + opportunityId, '_blank');
            });
        }
        
        function prepareModalDatePicker() {
            var elem = $('#unqOptyCloseDate');
            $(elem).datepicker({
                format: 'dd/mm/yyyy'
            });
            $(elem).on('changeDate', function() {
                $(elem).datepicker('hide');
            });
        }
        
        function setStrategyMaxWidth() {
            var width = $(window).width();
            //minus margins and paddings
            $('.strategy').css('max-width', width - 55);
        }
        
        function setPageMinHeight() {
            var height = window.innerHeight - 290;
            $('.pageForm').css('min-height', height);
        }

        function prepareClientStrategy() {
            $('.clientEditable').each(function() {
                var content = $(this).siblings('.clientEditableSource').text();
                $(this).html(content);
                this.contentEditable = false;
            });
        }

        function prepareBankStrategy() {
            $('.bankEditable').each(function() {
                var content = $(this).siblings('.bankEditableSource').text();
                $(this).html(content);
                this.contentEditable = false;
            });
        }

        function showAddStrategyModal() {
            $('#strategyModal').show();
            $('#addStrategyButton').show();
            $('#editStrategyButton').hide();

            $('#strategyName').val('');
            
            if(CKEDITOR.instances.clientStrategyRichtextArea == undefined) {
                prepareCKEditor('clientStrategyRichtextArea');
            }
            if(CKEDITOR.instances.bankStrategyRichtextArea == undefined) {
                prepareCKEditor('bankStrategyRichtextArea');
            }
            
            CKEDITOR.instances.clientStrategyRichtextArea.setData('');
            CKEDITOR.instances.bankStrategyRichtextArea.setData('');
        }

        function showEditStrategyModal(strategyId) {
            editedStrategyId = strategyId;
            
            var strategyTitle = $('#' + strategyId).find('#strategyTitle');
            var clientEditable = $('#' + strategyId + ' .clientEditable');
            var bankEditable = $('#' + strategyId + ' .bankEditable');

            var clientContent = $(clientEditable).html();
            var bankContent = $(bankEditable).html();
            
            $('#strategyModal').show();
            $('#addStrategyButton').hide();
            $('#editStrategyButton').show();

            $('#strategyName').val(strategyTitle.text());
            
            if(CKEDITOR.instances.clientStrategyRichtextArea == undefined) {
                prepareCKEditor('clientStrategyRichtextArea');
            }
            if(CKEDITOR.instances.bankStrategyRichtextArea == undefined) {
                prepareCKEditor('bankStrategyRichtextArea');
            }
            
            CKEDITOR.instances.clientStrategyRichtextArea.setData(clientContent);
            CKEDITOR.instances.bankStrategyRichtextArea.setData(bankContent);
        }
        
        function prepareCKEditor(textarea) {
            startLoading('{!$Label.lbl_PreparingEditor}');
            CKEDITOR.on("instanceReady", function(event) {
                 endLoading();
            });
            CKEDITOR.replace(textarea);
        }

        function onBeforeAddStrategy() {
            var strategyName = $('#strategyName').val();
            var clientContent = CKEDITOR.instances.clientStrategyRichtextArea.getData();
            var bankContent = CKEDITOR.instances.bankStrategyRichtextArea.getData();

            startLoading('{!$Label.lbl_AddingStrategy}');
            ClientPlanStrategyController.addStrategy(strategyName, clientContent, bankContent, planId, function(result) {
                if(result.indexOf('Error') >= 0){
                    showToast(result);
                } else{
                    closeEditStrategyModal();
                    addStrategyToListPanel(result,strategyName,clientContent,bankContent);
                    onSaved();
                }
                endLoading();
            });
        }

        function onBeforeRemoveStrategy(event, strategyId) {
            event.stopPropagation();
            
            if(window.confirm('{!$Label.msg_DeleteStrategyConfirm}')) {
                startLoading('{!$Label.lbl_DeletingStrategy}');
                ClientPlanStrategyController.removeStrategy(strategyId, function(result) {
                    if(result != null){
                        showAlert(result);
                    } else{
                        $('#strategiesListPanel').find('#' + strategyId).remove();
                    }
                    endLoading();
                });
            }
        }

        function onBeforeEditStrategy() {
            closeEditStrategyModal();
            var strategyName = $('#strategyName').val();
            var clientContent = CKEDITOR.instances.clientStrategyRichtextArea.getData();
            var bankContent = CKEDITOR.instances.bankStrategyRichtextArea.getData();
            
            $('#' + editedStrategyId + ' #strategyTitle').text(strategyName);
            $('#' + editedStrategyId + ' .clientEditable').html(clientContent);
            $('#' + editedStrategyId + ' .bankEditable').html(bankContent);
            
            startLoading('{!$Label.lbl_EditingClientStrategy}');
            editStrategy(editedStrategyId, strategyName, clientContent, bankContent);
        }

        function onBeforeRefreshStrategies() {
            var strategyName = $('#searchStrategyName').val();
            //refreshStrategies(strategyName);
            $('#searchStrategiesList').empty();
            ClientPlanStrategyController.getStrategiesList(strategyName, planId, function(result) {
                for(var i=0; i<result.length; i++){
                   addStrategyToSearchPanel(result[i]);
                } 
            });
        }

        function closeEditStrategyModal() {
            $('#strategyModal').hide();
        }

        function closeLinkOptyModal() {
            $('#linkOptyModal').hide();
        }

        function closeLinkPotOptyModal() {
            $('#linkPotOptyModal').hide();
        }        
        
        function onStrategyDeleted() {
            var content = $('.pageMessagesWrapper').html();
            
            if (content == '') {
                $('#' + editedStrategyId).remove();
            }
            endLoading();
        }
        
        function onOptyClicked(optyId) {
            window.open('/' + optyId, '_blank');
        }
        
        function showAddOptyModal(strategyId) {
            clearAddUnqOptyModal();
            $('#addUnqOptyModal .slds-text-heading--medium').text('{!$Label.lbl_AddOpportunity}');
            isUnqualified = false;
            $('#optyStage').show();
            $('#unqOptyProductWrapper').hide();
            $('#unqOptyCountry').show();
            $('label[for=unqOptyCountry], input#unqOptyCountry').show();
            prepareOptyModal(strategyId);
            changeProbOpty();
        }
        
        function showAddUnqOptyModal(strategyId) {
            clearAddUnqOptyModal();
            $('#addUnqOptyModal .slds-text-heading--medium').text('{!$Label.lbl_AddPotentialOpportunity}');
            isUnqualified = true;
            $('#unqOptyStage').show();
            prepareOptyModal(strategyId);
            changeProbUnqOpty();
        }
        
        function prepareOptyModal(strategyId) {
            editedStrategyId = strategyId;
            $('#convertOptyButton').hide();
            $('#showOptyButton').hide();
            $('#saveUnqOptyButton').show();
            isUpdate = false;
            $('#addUnqOptyModal').show();
        }
        
        function onBeforeOptyAdded(dto) {
            startLoading('{!$Label.lbl_AddingOpty}');
            //manageOpty(editedStrategyId, dto.name, dto.stage, dto.type, dto.country, dto.closeDate, '');
            
            ClientPlanStrategyController.addOpportunity(editedStrategyId, dto.name, dto.stage, dto.type, dto.country, dto.closeDate, planId, function(result) {
                if(result.indexOf('Error') >= 0){
                    showToast(result);
                } else{
                    $('#addUnqOptyModal').hide();
                    startLoading('{!$Label.lbl_AddingStrategy}');
                    refreshListPanel();
                }
            });
        }
        
        function onBeforeUnqOptyAdded(dto) {
            startLoading('{!$Label.lbl_AddingPotOpty}');
            $('#addUnqOptyModal').hide();
            manageUnqOpty(editedStrategyId, dto.name, dto.productLevel, dto.productId, dto.stage, dto.type, dto.closeDate, '');
        }
        
        function onBeforeUnqOptyEdited(dto) {
            startLoading('{!$Label.lbl_EditingPotOpty}');
            $('#addUnqOptyModal').hide();
            manageUnqOpty('', dto.name, dto.productLevel, dto.productId, dto.stage, dto.type, dto.closeDate, editedUnqOptyId);
        }
        
        function onBeforeUnqOptyLoaded(id) {
            startLoading('{!$Label.lbl_LoadingPotOpty}');
            editedUnqOptyId = id;
            loadUnqOpty(id);
        }
        
        function onUnqOptyLoaded() {
            isUnqualified = true;
            clearAddUnqOptyModal();
            $('#addUnqOptyModal .slds-text-heading--medium').text('{!$Label.lbl_EditPotOpty}');
            $('#unqOptyStage').show();
            
            var unqOptyJson = $('.unqOptyPanel').text();
            var unqOpty = JSON.parse(unqOptyJson);
            
            //console.log('Loading unqOpty: [' + unqOpty + ']');
            $('#unqOptyName').val(unqOpty.name);
            $('#unqOptyCloseDate').datepicker('setDate', new Date(unqOpty.closeDate));
            
            //$('.unqOptyModalProduct input').val(unqOpty.productName);
            //selectedClientPlanProduct = unqOpty.productId;
            //Pre-populate the product selector
            var existingProductName = '';
            var existingProductId = '';
            if(unqOpty.productLvl3Id != null) {
                selectedProductLevelAndId = '3||' + unqOpty.productLvl3Id;
                selectedProductName = unqOpty.productLvl3Name;
            } else if(unqOpty.productLvl2Id != null) {
                selectedProductLevelAndId = '2||' + unqOpty.productLvl2Id;
                selectedProductName = unqOpty.productLvl2Name;
            } else if(unqOpty.productLvl1Id != null) {
                selectedProductLevelAndId = '1||' + unqOpty.productLvl1Id;
                selectedProductName = unqOpty.productLvl1Name;
            }

            //console.log('selectedProductLevelAndId: ' + selectedProductLevelAndId);
            //console.log('selectedProductName: ' + selectedProductName);
            $('.unqOptyModalProduct input').val(selectedProductName);

            $('#unqOptyStage').val(unqOpty.stage);
            $('#unqOptyProbability').val(unqOpty.probability);
            $('#unqOptyType').val(unqOpty.type);
            
            if (unqOpty.opportunity !== null) {
                $('#saveUnqOptyButton').hide();
                $('#showOptyButton').show();
                $('#convertOptyButton').hide();
                disableUnqOptyModalInputs();
                opportunityId = unqOpty.opportunity;
            } else {
                $('#saveUnqOptyButton').show();
                $('#convertOptyButton').show();
                $('#showOptyButton').hide();
            }
            
            if (unqOpty.probability != 5) {
                $('#convertOptyButton').prop('disabled', true);
            }
            
            endLoading();
            isUpdate = true;
            $('#addUnqOptyModal').show();
        }
        
        function onBeforeConvertUnqOpty() {
            if(confirm('{!$Label.msg_ConvertPotOptyConfirm}')) {
                $('#addUnqOptyModal').hide();
                startLoading('{!$Label.lbl_ConvertingOpportunity}');
                convertUnqOpty(editedUnqOptyId);
            }
        }
        
        //Opty linking functions
        
        function showLinkOptyModal(strategyId) {
            editedStrategyId = strategyId;
            
            $('#noOptysSelectedAlert').hide();
            $('#linkOptyModal').show();
        }
        
        function onBeforeOptyLink() {
            var optyIdsToLink = [];
            $('.linkOptyCheckbox:checked').each( function() {
                var id = $(this).parent('.optyToLink').prop('id');
                optyIdsToLink.push(id);
            });
            
            if (optyIdsToLink.length == 0) {
                $('#noOptysSelectedAlert').show();
            } else {
                $('#linkOptyModal').hide();
                startLoading('{!$Label.lbl_LinkingOpportunities}');
                
                var optyIdsToLinkJson = JSON.stringify(optyIdsToLink);
                linkOptys(optyIdsToLinkJson, editedStrategyId);
            }
        }
        
        function onBeforeUnlinkOpty(optyId) {
            startLoading('{!$Label.lbl_UnlinkingOpportunity}');
            unlinkOpty(optyId);
        }

        function onBeforeDeleteUnqOpty(unqOptyId) {
            startLoading('{!$Label.lbl_UnlinkingOpportunity}');
            deleteUnqOpty(unqOptyId);
        }

        //Potential Opty linking functions
        
        function showLinkPotOptyModal(strategyId) {
            editedStrategyId = strategyId;
            
            $('#noPotOptysSelectedAlert').hide();
            $('#linkPotOptyModal').show();
        }
        
        function onBeforePotOptyLink() {
            var potOptyIdsToLink = [];
            $('.linkPotOptyCheckbox:checked').each( function() {
                var id = $(this).parent('.potOptyToLink').prop('id');
                potOptyIdsToLink.push(id);
            });
            
            if (potOptyIdsToLink.length == 0) {
                $('#noPotOptysSelectedAlert').show();
            } else {
                $('#linkPotOptyModal').hide();
                startLoading('{!$Label.lbl_LinkingPotOpportunities}');
                
                var potOptyIdsToLinkJson = JSON.stringify(potOptyIdsToLink);
                console.log(potOptyIdsToLinkJson);
                linkPotOptys(potOptyIdsToLinkJson, editedStrategyId);
            }
        }
        
        function onBeforeUnlinkPotOpty(optyId) {
            startLoading('{!$Label.lbl_UnlinkingPotOpportunity}');
            unlinkPotOpty(optyId);
        }      

        //error messages functions
        function checkErrorMessage() {
            var content = $('.errorMessagePanel').text();
            if (content != '') {
                showAlert(content);
            }
        }

        function addStrategyToSearchPanel(strategy){
            var createdDate = new Date(strategy.CreatedDate);
            $('#searchStrategiesList').prepend(
                '<li class="slds-list__item">'
                + '<div id="'+strategy.Id+'" class="slds-tile slds-tile--board">'
                +   '<div class="slds-grid slds-grid--align-spread slds-has-flexi-truncate">'
                +     '<span id="strategyTitle" class="slds-tile__title slds-truncate">'+strategy.Name+'</span>'
                +     '<div class="slds-dropdown-trigger">'
                +       '<button class="slds-button slds-button--icon-bare">'
                +         '<svg aria-hidden="true" class="slds-button__icon">'
                +           '<use xlink:href="{!URLFOR($Resource.SLDS092, 'assets/icons/utility-sprite/svg/symbols.svg#settings')}"></use>'
                +         '</svg>'
                +       '</button>'
                +       '<div class="slds-dropdown slds-dropdown--right slds-nubbin--top-right slds-dropdown--menu">'
                +         '<ul class="slds-dropdown__list" role="menu">'
                +           '<li id="menu-28-0" href="#" class="slds-dropdown__item">'
                +           '<a class="slds-truncate" role="menuitem" onclick="showEditStrategyModal(\''+strategy.Id+'\');return false;">{!$Label.lbl_Edit}</a>'
                +           '</li>'
                +         '</ul>'
                +       '</div>'      
                +     '</div>'
                +   '</div>'
                +   '<div class="slds-form--stacked">'
                +     '<div class="slds-form-element">'
                +       '<label class="slds-form-element__label">Date added</label>'
                +       '<div class="slds-form-element__control">'
                +         '<p>'
                +           '<span>'+createdDate.toLocaleDateString()+'</span>'
                +         '</p>'
                +       '</div>'
                +     '</div>'
                +   '</div>'
                + '</div>'
                +'</li>'
            );
        }

        function addStrategyToListPanel(strategyId, strategyName, clientContent, bankContent){
            if(!clientContent){
                clientContent = '';
            }
            if(!bankContent){
                bankContent = '';
            }
            $('#strategiesListPanel').prepend(
                '<div id="'+strategyId+'" class="slds-card strategy">'
                + '<div class="slds-card__header slds-grid">'
                +   '<div class="slds-media slds-media--center slds-has-flexi-truncate">'
                +     '<div class="slds-media__body">'
                +       '<h2 id="strategyTitle" class="slds-text-heading--small">'+strategyName+'</h2>'
                +     '</div>'
                +   '</div>'
                +   '<div class="slds-dropdown-trigger">'
                +     '<button class="slds-button slds-button--icon-border-filled">'
                +       '<svg aria-hidden="true" class="slds-button__icon">'
                +         '<use xlink:href="{!URLFOR($Resource.SLDS092, 'assets/icons/utility-sprite/svg/symbols.svg#settings')}"></use>'
                +       '</svg>'
                +     '</button>'
                +     '<div class="slds-dropdown slds-dropdown--right slds-dropdown--nubbin-top slds-dropdown--menu">'
                +       '<ul class="slds-dropdown__list" role="menu">'
                +         '<li id="menu-27-0" href="#" class="slds-dropdown__item">'
                +           '<a onclick="showEditStrategyModal(\''+strategyId+'\');return false;" class="slds-truncate" role="menuitem">{!$Label.lbl_Edit}</a>'
                +         '</li>'
                +         '<li id="menu-27-1" href="#" class="slds-dropdown__item">'
                +           '<a onclick="onBeforeRemoveStrategy(event, \''+strategyId+'\');return false;" class="slds-truncate" role="menuitem">{!$Label.lbl_Remove}</a>'
                +         '</li>'
                +       '</ul>'
                +     '</div>'
                +   '</div>'
                + '</div>'
                
                + '<div class="slds-card__body">'
                +   '<div class="slds-form--stacked">'
                +     '<div class="strategyContent">'
                +       '<span class="slds-form-element__label">{!$ObjectType.Client_Plan_Strategy__c.fields.Client_Strategy__c.Label}</span>'
                +       '<div class="slds-form-element__control">'
                +         '<div class="clientEditableSource">'+clientContent+'</div>'
                +         '<div class="clientEditable"></div>'
                +       '</div>'
                +     '</div>'
                +     '<div class="strategyContent">'
                +       '<span class="slds-form-element__label">{!$ObjectType.Client_Plan_Strategy__c.fields.Bank_Strategy__c.Label}</span>'
                +         '<div class="slds-form-element__control">'
                +           '<div class="bankEditableSource">'+bankContent+'</div>'
                +           '<div class="bankEditable"></div>'
                +         '</div>'
                +     '</div>'

                +     '<div class="optys strategyContent">'
                +       '<span class="slds-form-element__label">{!$Label.lbl_Opportunities}</span>'
                +       '<div id="opportunitiesList"></div>'
                +       '<div class="slds-dropdown-trigger">'
                +         '<button class="slds-button slds-button--icon-border-filled">'
                +           '<svg aria-hidden="true" class="slds-button__icon">'
                +             '<use xlink:href="{!URLFOR($Resource.SLDS092, 'assets/icons/utility-sprite/svg/symbols.svg#add')}"></use>'
                +           '</svg>'
                +         '</button>'
                +         '<div class="slds-dropdown slds-dropdown--right slds-dropdown--nubbin-top slds-dropdown--menu">'
                +           '<ul class="slds-dropdown__list" role="menu">'
                +             '<li id="menu-27-1" href="#" class="slds-dropdown__item">'
                +               '<a onclick="showLinkOptyModal(\''+strategyId+'\');return false;" class="slds-truncate" role="menuitem">{!$Label.lbl_LinkExistingOpportunity}</a>'
                +             '</li>'
                +             '<li id="menu-27-0" href="#" class="slds-dropdown__item">'
                +               '<a onclick="clearAddUnqOptyModal();showAddOptyModal(\''+strategyId+'\');return false;" class="slds-truncate" role="menuitem">{!$Label.lbl_AddOpportunity}</a>'
                +             '</li>'
                +           '</ul>'
                +         '</div>'
                +       '</div>'
                +     '</div>'

                +     '<div class="unqOptys strategyContent">'
                +       '<span class="slds-form-element__label">{!$Label.lbl_PotentialOpportunities}</span>'
                +       '<div id="potentialOpportunitiesList"></div>'
                +       '<div class="slds-dropdown-trigger">'
                +         '<button class="slds-button slds-button--icon-border-filled">'
                +           '<svg aria-hidden="true" class="slds-button__icon">'
                +             '<use xlink:href="{!URLFOR($Resource.SLDS092, 'assets/icons/utility-sprite/svg/symbols.svg#add')}"></use>'
                +           '</svg>'
                +         '</button>'
                +         '<div class="slds-dropdown slds-dropdown--right slds-dropdown--nubbin-top slds-dropdown--menu">'
                +           '<ul class="slds-dropdown__list" role="menu">'
                +             '<li id="menu-27-1" href="#" class="slds-dropdown__item">'
                +               '<a onclick="showLinkPotOptyModal(\''+strategyId+'\');return false;" class="slds-truncate" role="menuitem">{!$Label.lbl_LinkPotOpportunity}</a>'
                +             '</li>'                
                +             '<li id="menu-27-0" href="#" class="slds-dropdown__item">'
                +               '<a onclick="clearAddUnqOptyModal();showAddUnqOptyModal(\''+strategyId+'\');" class="slds-truncate" role="menuitem">{!$Label.lbl_AddPotentialOpportunity}</a>'
                +             '</li>'
                +           '</ul>'
                +         '</div>'
                +       '</div>'
                +     '</div>'
                +   '</div>'
                + '</div>'
                +'</div>'
            );
        }

        function addOpportunityToListPanel(strategyId, oppId, oppName, oppProbability){
            $('#'+strategyId+' #opportunitiesList').append(
                '<div class="slds-grid slds-grid--align-spread slds-has-flexi-truncate">'
                + '<div class="opty cursorPointer">'
                +   '<span onclick="onOptyClicked(\''+oppId+'\');return false;">'
                +     '<span class="optyName">'+oppName+'</span>'
                +     '<span class="optyProb">'+oppProbability+'%</span>'
                +   '</span>'
                + '</div>'
                + '<button class="slds-button slds-button--icon-bare" onclick="onBeforeUnlinkOpty(\''+oppId+'\');return false;">'
                +   '<svg aria-hidden="true" class="slds-button__icon">'
                +     '<use xlink:href="{!URLFOR($Resource.SLDS092, 'assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>'
                +   '</svg>'
                + '</button>'
                +'</div>'
            );
        }

        function addPotentialOpportunityToListPanel(strategyId, oppId, oppName, oppProbability){
            $('#'+strategyId+' #potentialOpportunitiesList').append(
                '<div class="slds-grid slds-grid--align-spread slds-has-flexi-truncate">'
                + '<div class="unqOpty cursorPointer" onclick="onBeforeUnqOptyLoaded(\''+oppId+'\');return false;">'
                +   '<span class="unqOptyName">'+oppName+'</span>'
                +   '<span class="unqOptyProb">'+oppProbability+'</span>'
                + '</div>'
                + '<button class="slds-button slds-button--icon-bare" onclick="onBeforeDeleteUnqOpty(\''+oppId+'\');return false;">'
                +   '<svg aria-hidden="true" class="slds-button__icon">'
                +     '<use xlink:href="{!URLFOR($Resource.SLDS092, 'assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>'
                +   '</svg>'
                + '</button>'
                +'</div>'
            );
        }
    
    </script>
    
    <style>

        .slds {
            background-color: #F4F6F9 !important;
        }
        
        .slds-tabs--default {
            background-color: white;
        }

        .slds-card {
            background-color: white !important;
        }

        .slds-dropdown__item {
          margin: 0;
          text-align: center;
        }

        #strategiesSearchPanel li {
            background-color: white;
            margin-left: 12px;
            margin-right: 12px;
        }

        #addStrategyPanel svg {
            fill: #DDDDDD;
        }

        .strategy {
            display: inline-block;
            width: 20%;
            margin: 1.3em;
            vertical-align:top;
            word-wrap: break-word;
            box-shadow: 0px 0px 4px #888888;
        }
        
        .datepicker-dropdown {
            position: absolute;
            display: block;
            background-color: white;
            z-index: 100;
            border: 1px solid #d8dde6;
        }

        .clientEditable table,
        .bankEditable table {
            width: auto !important;
        }
        
        /***OLD**/
        
        .cursorPointer {
            cursor: pointer;
        }
        
        .strategyContent {
            border: 1px solid rgb(221, 221, 221);
            width: 100%;
            padding: 0.5em;
            min-height: 6em;
        }

        .strategyContent div {
            font-size: 12px;
            line-height: 1;
        }

        .strategyContent .slds-dropdown-trigger{
            margin-left: 193px;
        }
        
        .bankStrategy,
        .unqOptys,
        .optys {
            border-top: 0px;
            text-align: left;
        }
        
        .optys {
            position: relative;
        }
        
        .clientEditableSource,
        .bankEditableSource {
            display: none;
        }
        
        .clientEditable,
        .bankEditable {
            text-align: left;
        }
        
        #addUnqOptyModal label {
            text-align: right;
        }
        
        .inline {
            display: inline-block;
        }
        
        .convertOptyButton {
            margin-right: 1em;
            position: relative;
            top: 3px;
        }
        
        .width100 {
            width: 100%;
        }
        
        .unqOpty,
        .opty {
            margin-top: 0.3em;
            margin-bottom: 0.3em;
            display: inline-block;
            width: 100%;
        }
        
        .unqOptys table td {
            padding-bottom: 0.3em;
            padding-top: 0.3em;
        }
        
        #unqOptyCloseDateFormGroup {
            margin-bottom: 6px;
        }
        
        .alert .glyphicon {
            margin-right: 10px;
        }
        
        .unqOpty .glyphicon {
            color: #00AEEF;
            margin-right: 1em;
            position: relative;
        }
        
        .unqOptyProb,
        .optyProb {
            float: right;
            padding-left: 1em;
        }
        
        #linkOptyModal .linkOptyCheckbox {
            margin-right: 1em;
            position: relative;
            top: 0.2em;
        }
        
        .optyToLink,
        .potOptyToLink {
            margin: 0.3em;
        }
        
        #linkOptyModal .modal-body {
            overflow-y: auto;
            max-height: 30em;
        }

        .hidden {
            display: none;
        }
        
        .richTextAlert {
            color: red;
            font-size: 10px;
        }        
        
    </style>
    <div class="slds">
    
        <c:ClientPlanHeader />
        
        <c:ProgressBarLightning />
        
        <c:LightningToast />
        
        <c:LightningAlert />

        <apex:stylesheet value="{!URLFOR($Resource.bootstrap_datepicker, 'bootstrap-datepicker.css')}"/>
        <apex:includeScript value="{!URLFOR($Resource.bootstrap_datepicker, 'bootstrap-datepicker.js')}"/>

    <apex:outputPanel id="errorMessagePanel" styleClass="errorMessagePanel hidden">{!errorMessage}</apex:outputPanel>
    
    <apex:outputPanel layout="block" rendered="{!planLoaded}">
        
    <apex:outputPanel id="mainPanel">
         <div style="display:inline-block ; margin: 5px;">
          <apex:form >
           <apex:outputPanel rendered="{!isGlobalParent}">
           <label   class="slds-form-element__label inputLabel" for="ClientPlans" ><b>
                {!$Label.lblUnderlyingClientPlans}</b>
            </label><br/>
            <apex:SelectList size="1" id="ClientPlans" styleClass="slds-select" value="{!selectedClientPlans}" title="Select Client" onChange="window.open(this.value,'_blank', 'toolbar=0,location=0,menubar=0')" >
                <apex:selectOptions value="{!ChildClientPlans}" />
            </apex:SelectList><br/>
           </apex:outputPanel>
              </apex:form>
        </div>
    <div class="slds-grid">
        <div id="strategiesSearchPanel" class="slds-col slds-size--1-of-5" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
            <div class="slds-form--stacked">
                <div class="slds-form-element" style="padding:12px;">
                    <span class="slds-form-element__label">Search for a strategy</span>
                    <div class="slds-form-element__control">
                        <input id="searchStrategyName" class="slds-input" type="text" onchange="onBeforeRefreshStrategies();" />
                    </div>
                </div>
            </div>
            <apex:outputPanel id="strategiesLeftPanelList">
            <div class="slds-scrollable--y">
                <ul id="searchStrategiesList" class="slds-list--vertical slds-has-cards">
                    <apex:repeat value="{!strategies}" var="strategy">
                    <li class="slds-list__item">
                        <div class="slds-tile slds-tile--board">
                            <div class="slds-grid slds-grid--align-spread slds-has-flexi-truncate">
                                <span class="slds-tile__title slds-truncate">{!strategy.Name}</span>
                                <div class="slds-dropdown-trigger">
                                    <button class="slds-button slds-button--icon-bare">
                                        <svg aria-hidden="true" class="slds-button__icon">
                                            <use xlink:href="{!URLFOR($Resource.SLDS092, 'assets/icons/utility-sprite/svg/symbols.svg#settings')}"></use>
                                        </svg>
                                    </button>
                                    <div class="slds-dropdown slds-dropdown--right slds-nubbin--top-right slds-dropdown--menu">
                                      <ul class="slds-dropdown__list" role="menu">
                                        <li id="menu-28-0" href="#" class="slds-dropdown__item">
                                            <a class="slds-truncate" role="menuitem" onclick="showEditStrategyModal('{!strategy.Id}');return false;">{!$Label.lbl_Edit}</a>
                                        </li>
                                      </ul>
                                    </div>         
                                </div>
                            </div>
                            <div class="slds-form--stacked">
                                <div class="slds-form-element">
                                    <label class="slds-form-element__label">Date added</label>
                                    <div class="slds-form-element__control">
                                        <p>
                                            <apex:outputText value="{0, date, dd/MM/yyyy}">
                                                <apex:param value="{!strategy.CreatedDate}" /> 
                                            </apex:outputText>
                                        </p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </li>
                    </apex:repeat>
                </ul>
            </div>
            </apex:outputPanel>
        </div> 

        <div class="slds-col slds-size--4-of-5" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
        <apex:outputPanel layout="block">
            <div id="strategiesListPanel">
                <apex:repeat value="{!strategies}" var="strategy">
                    <div id="{!strategy.Id}" class="slds-card strategy">
                        <div class="slds-card__header slds-grid">
                            <div class="slds-media slds-media--center slds-has-flexi-truncate">
                                <div class="slds-media__body">
                                    <h2 id="strategyTitle" class="slds-text-heading--small">{!strategy.Name}</h2>
                                </div>
                            </div>
                            <div class="slds-dropdown-trigger">
                                <button class="slds-button slds-button--icon-border-filled">
                                    <svg aria-hidden="true" class="slds-button__icon">
                                        <use xlink:href="{!URLFOR($Resource.SLDS092, 'assets/icons/utility-sprite/svg/symbols.svg#settings')}"></use>
                                    </svg>
                                </button>
                                <div class="slds-dropdown slds-dropdown--right slds-dropdown--nubbin-top slds-dropdown--menu">
                                    <ul class="slds-dropdown__list" role="menu">
                                        <li id="menu-27-0" href="#" class="slds-dropdown__item">
                                            <a onclick="showEditStrategyModal('{!strategy.Id}');return false;" class="slds-truncate" role="menuitem">{!$Label.lbl_Edit}</a>
                                        </li>
                                        <li id="menu-27-1" href="#" class="slds-dropdown__item">
                                            <a onclick="onBeforeRemoveStrategy(event, '{!strategy.Id}');return false;" class="slds-truncate" role="menuitem">{!$Label.lbl_Remove}</a>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                        
                        <div class="slds-card__body">
                            <div class="slds-form--stacked">
                                <div class="strategyContent">
                                    <span class="slds-form-element__label">{!$ObjectType.Client_Plan_Strategy__c.fields.Client_Strategy__c.Label}</span>
                                    <div class="slds-form-element__control">
                                        <div class="clientEditableSource">{!strategy.Client_Strategy__c}</div>
                                        <div class="clientEditable"></div>
                                    </div>
                                </div>
                                <div class="strategyContent">
                                    <span class="slds-form-element__label">{!$ObjectType.Client_Plan_Strategy__c.fields.Bank_Strategy__c.Label}</span>
                                    <div class="slds-form-element__control">
                                        <div class="bankEditableSource">{!strategy.Bank_Strategy__c}</div>
                                        <div class="bankEditable"></div>
                                    </div>
                                </div>

                                <div class="optys strategyContent">
                                    <span class="slds-form-element__label">{!$Label.lbl_Opportunities}</span>
                                    <div id="opportunitiesList">
                                      <apex:repeat value="{!optysMap[strategy.Id]}" var="opty">
                                        <div class="slds-grid slds-grid--align-spread slds-has-flexi-truncate">
                                            <div class="opty cursorPointer">
                                                <span onclick="onOptyClicked('{!opty.Id}');return false;">
                                                    <span class="optyName"><apex:outputText value="{!opty.Name}"/></span>
                                                    <span class="optyProb"><apex:outputText value="{!opty.Probability}%"/></span>
                                                </span>
                                            </div>
                                            <button class="slds-button slds-button--icon-bare" onclick="onBeforeUnlinkOpty('{!opty.Id}');return false;">
                                                <svg aria-hidden="true" class="slds-button__icon">
                                                    <use xlink:href="{!URLFOR($Resource.SLDS092, 'assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>
                                                </svg>
                                            </button>
                                        </div>
                                      </apex:repeat>
                                    </div>
                                    <div class="slds-dropdown-trigger">
                                        <button class="slds-button slds-button--icon-border-filled">
                                            <svg aria-hidden="true" class="slds-button__icon">
                                                <use xlink:href="{!URLFOR($Resource.SLDS092, 'assets/icons/utility-sprite/svg/symbols.svg#add')}"></use>
                                            </svg>
                                        </button>
                                        <div class="slds-dropdown slds-dropdown--right slds-dropdown--nubbin-top slds-dropdown--menu">
                                            <ul class="slds-dropdown__list" role="menu">
                                                <li id="menu-27-1" href="#" class="slds-dropdown__item">
                                                    <a onclick="showLinkOptyModal('{!strategy.Id}');return false;" class="slds-truncate" role="menuitem">{!$Label.lbl_LinkExistingOpportunity}</a>
                                                </li>
                                                <li id="menu-27-0" href="#" class="slds-dropdown__item">
                                                    <a onclick="clearAddUnqOptyModal();showAddOptyModal('{!strategy.Id}');return false;" class="slds-truncate" role="menuitem">{!$Label.lbl_AddOpportunity}</a>
                                                </li>
                                            </ul>
                                        </div>
                                    </div>
                                </div>

                                <div class="unqOptys strategyContent">
                                    <span class="slds-form-element__label">{!$Label.lbl_PotentialOpportunities}</span>
                                    <div id="potentialOpportunitiesList">
                                      <apex:repeat value="{!unqOptysMap[strategy.Id]}" var="opty">
                                        <div class="slds-grid slds-grid--align-spread slds-has-flexi-truncate">
                                            <div class="unqOpty cursorPointer" onclick="onBeforeUnqOptyLoaded('{!opty.Id}');return false;">
                                                <span class="unqOptyName"><apex:outputText value="{!opty.Name}"/></span>
                                                <span class="unqOptyProb"><apex:outputText value="{!opty.Probability__c}"/></span>
                                            </div>
                                            <button class="slds-button slds-button--icon-bare" onclick="onBeforeDeleteUnqOpty('{!opty.Id}');return false;">
                                                <svg aria-hidden="true" class="slds-button__icon">
                                                    <use xlink:href="{!URLFOR($Resource.SLDS092, 'assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>
                                                </svg>
                                            </button>
                                        </div>
                                      </apex:repeat>
                                    </div>
                                    <div class="slds-dropdown-trigger">
                                        <button class="slds-button slds-button--icon-border-filled">
                                            <svg aria-hidden="true" class="slds-button__icon">
                                                <use xlink:href="{!URLFOR($Resource.SLDS092, 'assets/icons/utility-sprite/svg/symbols.svg#add')}"></use>
                                            </svg>
                                        </button>
                                        <div class="slds-dropdown slds-dropdown--right slds-dropdown--nubbin-top slds-dropdown--menu">
                                            <ul class="slds-dropdown__list" role="menu">
                                                <li id="menu-27-1" href="#" class="slds-dropdown__item">
                                                    <a onclick="showLinkPotOptyModal('{!strategy.Id}');return false;" class="slds-truncate" role="menuitem">{!$Label.lbl_LinkPotOpportunity}</a>
                                                </li>                                                
                                                <li id="menu-27-0" href="#" class="slds-dropdown__item">
                                                    <a onclick="clearAddUnqOptyModal();showAddUnqOptyModal('{!strategy.Id}');return false;" class="slds-truncate" role="menuitem">{!$Label.lbl_AddPotentialOpportunity}</a>
                                                </li>
                                            </ul>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </apex:repeat>
                <div id="addStrategyPanel" class="slds-card slds-card--empty strategy" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
                  <div class="slds-card__body">
                    <div class="slds-media__figure">
                        <h3 class="slds-p-top--large slds-p-bottom--large">
                            <svg aria-hidden="true" class="slds-slds-icon slds-icon--large">
                                <use xlink:href="{!URLFOR($Resource.SLDS092, 'assets/icons/utility-sprite/svg/symbols.svg#list')}"></use>
                            </svg>
                        </h3>
                    </div>
                    <button class="slds-button slds-button--brand slds-button--small" onclick="showAddStrategyModal();return false;">{!$Label.lbl_AddStrategy}</button>
                  </div>
                </div>
            </div>
        </apex:outputPanel>
        </div>
    </div>  
    </apex:outputPanel>

    <apex:form id="theformid">

        <apex:actionFunction name="editStrategy" action="{!editStrategy}" reRender="errorMessagePanel" oncomplete="endLoading();">
            <apex:param assignTo="{!strategyId}" value="" name="strategyId"/>
            <apex:param assignTo="{!strategyName}" value="" name="strategyName"/>
            <apex:param assignTo="{!clientContent}" value="" name="clientContent"/>
            <apex:param assignTo="{!bankContent}" value="" name="bankContent"/>
        </apex:actionFunction>
        
        <apex:actionFunction name="manageOpty" action="{!manageOpty}" reRender="errorMessagePanel" oncomplete="refreshListPanel();">
            <apex:param assignTo="{!optyToAdd.Client_Plan_Strategy__c}" value="" name="strategyId"/>
            <apex:param assignTo="{!optyToAdd.Name}" value="" name="name"/>
            <apex:param assignTo="{!optyToAdd.StageName}" value="" name="stage"/>
            <apex:param assignTo="{!optyToAdd.Type}" value="" name="type"/>
            <apex:param assignTo="{!optyToAdd.Opportunity_Country__c}" value="" name="country"/>
            <apex:param assignTo="{!closeDateMillisString}" value="" name="closeDateMillisString"/>
            <apex:param assignTo="{!managedUnqOptyId}" value="" name="managedUnqOptyId"/>
        </apex:actionFunction>
        
        <apex:actionFunction name="manageUnqOpty" action="{!manageUnqOpty}" oncomplete="refreshListPanel();">
            <apex:param assignTo="{!unqOptyToAdd.Client_Plan_Strategy__c}" value="" name="strategyId"/>
            <apex:param assignTo="{!unqOptyToAdd.Name}" value="" name="name"/>
            <apex:param assignTo="{!selectedProductLevel}" value="" name="productLevel"/>
            <apex:param assignTo="{!selectedProductId}" value="" name="productId"/>
            <apex:param assignTo="{!unqOptyToAdd.Stage__c}" value="" name="stage"/>
            <apex:param assignTo="{!unqOptyToAdd.Type__c}" value="" name="type"/>
            <apex:param assignTo="{!closeDateMillisString}" value="" name="closeDateMillisString"/>
            <apex:param assignTo="{!managedUnqOptyId}" value="" name="managedUnqOptyId"/>
        </apex:actionFunction>
        
        <apex:actionFunction name="loadUnqOpty" action="{!loadUnqOpty}" reRender="errorMessagePanel,unqOptyPanel" oncomplete="onUnqOptyLoaded();">
            <apex:param assignTo="{!unqOptyId}" value="" name="unqOptyId"/>
        </apex:actionFunction>
        
        <apex:actionFunction name="convertUnqOpty" action="{!convertUnqOpty}" oncomplete="refreshListPanel();" reRender="errorMessagePanel" >
            <apex:param assignTo="{!managedUnqOptyId}" value="" name="managedUnqOptyId"/>
        </apex:actionFunction>
        
        <apex:actionFunction name="linkOptys" action="{!linkOptys}" oncomplete="refreshListPanel();" reRender="errorMessagePanel,optysToLinkPanel" >
            <apex:param assignTo="{!optysToLinkJson}" value="" name="optysToLinkJson"/>
            <apex:param assignTo="{!strategyId}" value="" name="strategyId"/>
        </apex:actionFunction>
        
        <apex:actionFunction name="unlinkOpty" action="{!unlinkOpty}" oncomplete="refreshListPanel();" reRender="errorMessagePanel,optysToLinkPanel" >
            <apex:param assignTo="{!optyId}" value="" name="optyId"/>
        </apex:actionFunction>

        <apex:actionFunction name="deleteUnqOpty" action="{!deleteUnqOpty}" oncomplete="refreshListPanel();" reRender="errorMessagePanel" >
            <apex:param assignTo="{!unqOptyId}" value="" name="unqOptyId"/>
        </apex:actionFunction>

        <apex:actionFunction name="linkPotOptys" action="{!linkPotOptys}" oncomplete="refreshListPanel();" reRender="errorMessagePanel,potOptysToLinkPanel" >
            <apex:param assignTo="{!potOptysToLinkJson}" value="" name="potOptysToLinkJson"/>
            <apex:param assignTo="{!strategyId}" value="" name="strategyId"/>
        </apex:actionFunction>
        
        <apex:actionFunction name="unlinkPotOpty" action="{!unlinkPotOpty}" oncomplete="refreshListPanel();" reRender="errorMessagePanel,potOptysToLinkPanel" >
            <apex:param assignTo="{!optyId}" value="" name="optyId"/>
        </apex:actionFunction>        
    </apex:form>
    <apex:outputPanel id="strategyModalPanel">
        <div id="strategyModal" style="display:none;">
            <div aria-hidden="false" role="dialog" class="slds-modal slds-fade-in-open" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
                <div class="slds-modal__container">
                    <div class="slds-modal__header">
                        <h2 class="slds-text-heading--medium">Add a client strategy</h2>
                        <button class="slds-button slds-button--icon-inverse slds-modal__close" onclick="closeEditStrategyModal();return false;">
                            <svg aria-hidden="true" class="slds-button__icon slds-button__icon--large">
                                <use xlink:href="{!URLFOR($Resource.SLDS092, 'assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>
                            </svg>
                        </button>
                    </div>
                    <div class="slds-modal__content">
                        <div class="slds-form--stacked">
                            <div class="slds-form-element">
                                <label class="slds-form-element__label" for="strategyName">Strategy name</label>
                                <div class="slds-form-element__control">
                                    <input id="strategyName" class="slds-input" type="text" />
                                </div>
                            </div>
                            <div class="slds-form-element">
                                <label class="slds-form-element__label" for="clientStrategyRichtextArea">
                                    <apex:outputText value="{!$ObjectType.Client_Plan_Strategy__c.fields.Client_Strategy__c.Label}" />
                                </label>
                                <div class="slds-form-element__control">
                                    <textarea id="clientStrategyRichtextArea"/>
                                </div>
                            </div>
                            <div>
                                <apex:outputText styleClass="richTextAlert" value="{!$Label.lbl_CopyPasteRichTextAlert}"/>
                            </div>  
                            <div class="slds-form-element">
                                <label class="slds-form-element__label" for="bankStrategyRichtextArea">
                                    <apex:outputText value="{!$ObjectType.Client_Plan_Strategy__c.fields.Bank_Strategy__c.Label}" />
                                </label>
                                <div class="slds-form-element__control">
                                    <textarea id="bankStrategyRichtextArea"/>
                                </div>
                            </div>
                            <div>
                                <apex:outputText styleClass="richTextAlert" value="{!$Label.lbl_CopyPasteRichTextAlert}"/>
                            </div>                              
                        </div>
                    </div>
                    <div class="slds-modal__footer">
                        <button class="slds-button slds-button--neutral" onclick="closeEditStrategyModal();return false;">Cancel</button>
                        <button id="editStrategyButton" class="slds-button slds-button--neutral slds-button--brand" onclick="onBeforeEditStrategy();">Save</button>
                        <button id="addStrategyButton" class="slds-button slds-button--neutral slds-button--brand" onclick="onBeforeAddStrategy();">Add</button>
                    </div>
                </div>
            </div>
            <div class="slds-modal-backdrop slds-modal-backdrop--open"></div>
        </div>
    </apex:outputPanel> 
        
    <c:ClientPlanPotentialOppModal />

    <apex:outputPanel id="linkOptyModalPanel">
        <div id="linkOptyModal" style="display:none;">
          <div aria-hidden="false" role="dialog" class="slds-modal slds-fade-in-open" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
            <div class="slds-modal__container">
              <div class="slds-modal__header">
                <h2 id="myModalLabel" class="slds-text-heading--medium">{!$Label.lbl_LinkExistingOpportunity}</h2>
                <button class="slds-button slds-button--icon-inverse slds-modal__close" onclick="closeLinkOptyModal();return false;">
                  <svg aria-hidden="true" class="slds-button__icon slds-button__icon--large">
                    <use xlink:href="{!URLFOR($Resource.SLDS092, 'assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>
                  </svg>
                </button>
              </div>
              <div class="slds-modal__content">
                <div class="alert alert-danger" id="noOptysSelectedAlert" role="alert" style="display:none;">
                  <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>
                  <apex:outputText value="{!$Label.errMsg_NoOpportunitySelected}"/>
                </div>
                <apex:outputPanel id="optysToLinkPanel" layout="block">
                    <apex:repeat value="{!optysToLink}" var="opty">
                        <div id="{!opty.Id}" class="optyToLink">
                            <input type="checkbox" class="linkOptyCheckbox"/>
                            <apex:outputText value="{!opty.Name}"/>
                        </div>
                    </apex:repeat>
                    <apex:outputPanel rendered="{!IF(optysToLink.empty, true, false)}" layout="block">
                        <div class="alert alert-danger" role="alert">
                            <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"/>
                            <span><apex:outputText value="{!$Label.msg_NoOpportunityToLink}"/></span>
                        </div>
                    </apex:outputPanel>
                </apex:outputPanel>
              </div>
              <div class="slds-modal__footer">
                  <button class="slds-button slds-button--neutral" onclick="closeLinkOptyModal();return false;">Cancel</button>
                  <button id="linkOptyButton" class="slds-button slds-button--neutral slds-button--brand" onclick="onBeforeOptyLink();return false;">{!$Label.lbl_Link}</button>
              </div>
            </div>
          </div>
          <div class="slds-modal-backdrop slds-modal-backdrop--open"></div>
        </div>
    </apex:outputPanel>

    <apex:outputPanel id="linkUnqOptyModalPanel">
        <div id="linkPotOptyModal" style="display:none;">
          <div aria-hidden="false" role="dialog" class="slds-modal slds-fade-in-open" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
            <div class="slds-modal__container">
              <div class="slds-modal__header">
                <h2 id="myModalLabel" class="slds-text-heading--medium">{!$Label.lbl_LinkPotOpportunity}</h2>
                <button class="slds-button slds-button--icon-inverse slds-modal__close" onclick="closeLinkPotOptyModal();return false;">
                  <svg aria-hidden="true" class="slds-button__icon slds-button__icon--large">
                    <use xlink:href="{!URLFOR($Resource.SLDS092, 'assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>
                  </svg>
                </button>
              </div>
              <div class="slds-modal__content">
                <div class="alert alert-danger" id="noPotOptysSelectedAlert" role="alert" style="display:none;">
                  <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>
                  <apex:outputText value="{!$Label.errMsg_NoPotOpportunitySelected}"/>
                </div>
                <apex:outputPanel id="potOptysToLinkPanel" layout="block">
                    <apex:repeat value="{!potOptysToLink}" var="potOpty">
                        <div id="{!potOpty.Id}" class="potOptyToLink">
                            <input type="checkbox" class="linkPotOptyCheckbox"/>
                            <apex:outputText value="{!potOpty.Name}"/>
                        </div>
                    </apex:repeat>
                    <apex:outputPanel rendered="{!IF(potOptysToLink.empty, true, false)}" layout="block">
                        <div class="alert alert-danger" role="alert">
                            <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"/>
                            <span><apex:outputText value="{!$Label.msg_NoPotOpportunityToLink}"/></span>
                        </div>
                    </apex:outputPanel>
                </apex:outputPanel>
              </div>
              <div class="slds-modal__footer">
                  <button class="slds-button slds-button--neutral" onclick="closeLinkPotOptyModal();return false;">Cancel</button>
                  <button id="linkPotOptyButton" class="slds-button slds-button--neutral slds-button--brand" onclick="onBeforePotOptyLink();return false;">{!$Label.lbl_Link}</button>
              </div>
            </div>
          </div>
          <div class="slds-modal-backdrop slds-modal-backdrop--open"></div>
        </div>
    </apex:outputPanel>    

    <apex:outputPanel id="unqOptyPanel" styleClass="unqOptyPanel hidden">{!unqOptyJson}</apex:outputPanel>
        
    </apex:outputPanel>
    
    </div>
</apex:page>